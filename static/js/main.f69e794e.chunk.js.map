{"version":3,"sources":["assets/icons/list.svg","assets/icons/valorisation.svg","forceDirected/ForceDirectedChart.tsx","forceDirected/Templates.tsx","forceDirected/Element.ts","forceDirected/Modal.tsx","forceDirected/Action.tsx","forceDirected/RightPanel.tsx","forceDirected/Tile/TileItem.tsx","forceDirected/Tile/TileList.tsx","forceDirected/BottomPanel.tsx","forceDirected/FormBuilder.tsx","forceDirected/Force.tsx","forceDirected/LeftPanel.tsx","forceDirected/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Chart","styled","div","actions","valorisation","alert","toggle","node","isActive","console","log","ForceDirectedChart","retreiveSelectedNode","datas","config","chartRef","useRef","seriesRef","testSelectedNode","buildPieChart","container","containerHeight","points","x","contentWidth","y","menuRef","createChild","am4chart","height","bbox","data","action","weight","image","ValorisationIcon","callbackKey","ListIcon","isMeasured","width","moveTo","toBack","menuSeries","series","push","dataFields","value","hiddenState","properties","endAngle","ticks","template","disabled","slices","togglable","strokeWidth","strokeOpacity","tooltipText","labels","text","padding","icon","am4core","propertyFields","href","events","on","target","pieChart","dataItem","component","chart","dataContext","current","dispose","useEffect","am4themesAnimated","ForceDirectedTree","ForceDirectedSeries","nodes","children","values","find","child","dataToArray","Array","isArray","id","Bar","color","marginBottom","Button","label","bgColor","radius","Ul","ul","Li","li","Root","aside","Content","Header","header","Modal","close","entity","selectItem","displayedKey","linkId","React","useState","setData","a","axios","method","url","response","error","message","fetchData","type","onClick","map","item","key","guid","name","link","Action","context","displayModal","setDisplayModal","setDisplayedKey","setEntity","index","handleActions","RightPanel","closePanel","title","isSelected","Badge","span","Tile","itemsLength","handleClick","entityName","selectedEntity","TileList","lists","groupedLists","setGroupList","reduce","acc","Object","keys","length","TileItem","List","ListItem","Buttons","BottomPanel","list","handleSelect","entityItem","_id","Label","FormBuilder","object","selectNode","prevSelectedNode","entries","entry","idx","main","Navigation","article","Column","Row","section","Force","match","initConfigState","selectedNode","setSelectedNode","showRightPanel","setShowRightPanel","showBottomPanel","setShowBottomPanel","setError","setDatas","setSelectedEntity","isLoading","setIsLoading","setConfig","handleSelectedNode","params","prevDatas","filter","LeftPanel","menus","menu","to","Home","App","setMenus","Axios","exact","path","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f69e794e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/list.b39fb484.svg\";","module.exports = __webpack_public_path__ + \"static/media/valorisation.ec937b18.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useRef } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4chart from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport {\n  ForceDirectedTree,\n  ForceDirectedSeries,\n  ForceDirectedNode,\n} from '@amcharts/amcharts4/plugins/forceDirected';\nimport styled from '@emotion/styled';\nimport ListIcon from '../assets/icons/list.svg';\nimport ValorisationIcon from '../assets/icons/valorisation.svg';\nimport { ConfigState } from './forceDirected';\n\nconst Chart = styled.div`\n  height: 30rem;\n`;\n\ninterface Props {\n  retreiveSelectedNode: Function;\n  datas: any;\n  config: ConfigState;\n}\n\nconst actions = {\n  valorisation: () => alert('openValorisation'),\n  toggle: node => {\n    const activeNode = node;\n    if (node) {\n      activeNode.isActive = !node.isActive;\n    }\n    console.log(node);\n  },\n};\n\nfunction ForceDirectedChart({ retreiveSelectedNode, datas, config }: Props) {\n  const chartRef = useRef<ForceDirectedTree | null>(null);\n  const seriesRef = useRef<ForceDirectedSeries | null>(null);\n  // const menuRef = useRef<am4chart.PieChart | null>(null);\n  const testSelectedNode = useRef<ForceDirectedNode | null>(null);\n  const buildPieChart = container => {\n    const menuRefData = (containerHeight: number) => {\n      console.log(containerHeight);\n      return [\n        {\n          action: 'Slice1',\n          weight: 90,\n          image: ValorisationIcon,\n          x: 50,\n          y: -65,\n          callbackKey: 'valorisation',\n        },\n        {\n          action: 'Slice2',\n          weight: 90,\n          image: ListIcon,\n          x: 50,\n          y: 40,\n          callbackKey: 'toggle',\n        },\n        {\n          action: 'Slice3',\n          weight: 90,\n          image: ValorisationIcon,\n          x: -75,\n          y: 40,\n          callbackKey: 'valorisation',\n        },\n        {\n          action: 'Slice4',\n          weight: 90,\n          image: ListIcon,\n          x: -75,\n          y: -65,\n          callbackKey: 'toggle',\n        },\n      ];\n    };\n    const points: am4core.IPoint = {\n      x: -(container.contentWidth + 150) / 2,\n      y: -(container.contentWidth + 150) / 2,\n    };\n    const menuRef = container.createChild(am4chart.PieChart);\n\n    const { height } = container.bbox;\n    menuRef.data = menuRefData(height);\n    menuRef.isMeasured = false;\n    menuRef.width = container.contentWidth + 150;\n    menuRef.height = container.contentWidth + 150;\n    menuRef.moveTo(points);\n    menuRef.isMeasured = false;\n    menuRef.toBack();\n\n    /**\n     * MenuSeries (PieSeries)\n     */\n    const menuSeries = menuRef.series.push(new am4chart.PieSeries());\n    menuSeries.dataFields.value = 'weight';\n    menuSeries.hiddenState.properties.endAngle = -90;\n    menuSeries.ticks.template.disabled = true;\n    menuSeries.slices.template.togglable = false;\n    menuSeries.slices.template.strokeWidth = 2;\n    menuSeries.slices.template.strokeOpacity = 1;\n    menuSeries.slices.template.tooltipText = '';\n    menuSeries.labels.template.text = '';\n    menuSeries.labels.template.padding(0, 0, 0, 0);\n\n    /**\n     * Add icons\n     */\n    const icon: am4core.Image = menuSeries.slices.template.createChild(\n      am4core.Image\n    );\n    icon.isMeasured = false;\n    icon.propertyFields.href = 'image';\n    icon.width = 30;\n    icon.height = 30;\n    icon.propertyFields.x = 'x';\n    icon.propertyFields.y = 'y';\n\n    /**\n     * Events Callback\n     */\n    menuSeries.slices.template.events.on('hit', ({ target }) => {\n      const pieChart: am4chart.PieChart = target.dataItem.component.chart;\n      const { callbackKey } = target.dataItem.dataContext;\n      const callback = actions[callbackKey];\n      if (typeof callback === 'function') {\n        actions[callbackKey](testSelectedNode.current);\n      }\n      pieChart.dispose();\n    });\n    return menuRef;\n  };\n\n  useEffect(() => {\n    am4core.useTheme(am4themesAnimated);\n    chartRef.current = am4core.create('chartdiv', ForceDirectedTree);\n\n    if (config && chartRef.current) {\n      seriesRef.current = new ForceDirectedSeries();\n      chartRef.current.series.push(seriesRef.current);\n      chartRef.current.padding(0, 0, 0, 0);\n      seriesRef.current.config = config.series;\n      seriesRef.current.nodes.template.togglable = false;\n      // seriesRef.current.nodes.template.outerCircle.fill = am4core.color(\n      //   '#000000'\n      // );\n\n      seriesRef.current.nodes.template.events.on('hit', ({ target }) => {\n        const pieChart = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (!pieChart) {\n          buildPieChart(target);\n        }\n        testSelectedNode.current = target;\n        retreiveSelectedNode(target.dataItem.dataContext);\n      });\n\n      seriesRef.current.nodes.template.events.on('over', ({ target }) => {\n        const pieChart = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (!pieChart) {\n          buildPieChart(target);\n        }\n        testSelectedNode.current = target;\n        retreiveSelectedNode(target.dataItem.dataContext);\n      });\n\n      seriesRef.current.nodes.template.events.on('out', ({ target }) => {\n        const pieChart = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (pieChart) {\n          // pieChart.dispose();\n        }\n      });\n\n      seriesRef.current.nodes.template.events.on('doublehit', ({ target }) => {\n        const pieChart = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (pieChart) {\n          pieChart.dispose();\n        }\n      });\n    }\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.dispose();\n      }\n    };\n  }, [config]);\n\n  useEffect(() => {\n    if (seriesRef.current && datas) {\n      let dataToArray = datas;\n      if (!Array.isArray(dataToArray)) {\n        dataToArray = [dataToArray];\n      }\n      seriesRef.current.data = dataToArray;\n    }\n  }, [datas]);\n\n  return <Chart id=\"chartdiv\" />;\n}\n\nexport default ForceDirectedChart;\n\n// useEffect(() => {\n// const hasParent = (node: ForceDirectedSeriesDataItem) => !!node.parent;\n// const getParentId = (node?: ForceDirectedSeriesDataItem) =>\n//   node && node.parent && node.parent.cloneId;\n\n// const hasSameParent = (\n//   node1: ForceDirectedSeriesDataItem,\n//   node2: ForceDirectedSeriesDataItem\n// ) => getParentId(node1) === getParentId(node2);\n\n// const removeFollowingChildNode = (\n//   nodes: ForceDirectedNode[],\n//   nodeToRemove?: ForceDirectedNode\n// ) => {\n//   const existingCrumbIndex = nodes.findIndex(\n//     node =>\n//       nodeToRemove &&\n//       node.dataItem.cloneId === nodeToRemove.dataItem.cloneId\n//   );\n//   if (existingCrumbIndex !== -1) {\n//     return nodes.slice(0, existingCrumbIndex + 1);\n//   }\n//   return nodes;\n// };\n\n// const nodeWithSameLevel = (\n//   nodes: ForceDirectedNode[],\n//   parentId?: string\n// ) => {\n//   if (!nodes || !parentId) return null;\n//   const foundedNode = nodes.find(\n//     node => getParentId(node.dataItem) === parentId\n//   );\n//   if (foundedNode) return foundedNode;\n//   return null;\n// };\n\n// const handleSameLevel = (\n//   nodes: ForceDirectedNode[],\n//   actualNode: ForceDirectedNode\n// ) => {\n//   /**\n//     it doesn't work when 2nd generation are click\n//    */\n//   const alreadyExists = nodes.some(\n//     node =>\n//       actualNode && node.dataItem.cloneId === actualNode.dataItem.cloneId\n//   );\n//   if (alreadyExists) return removeFollowingChildNode(nodes, actualNode);\n\n//   const lastNode: ForceDirectedNode =\n//     nodes[nodes.length - 1] ||\n//     (actualNode &&\n//       nodeWithSameLevel(nodes, getParentId(actualNode.dataItem)));\n\n//   if (lastNode) {\n//     let tempNodes = removeFollowingChildNode(nodes, lastNode);\n//     if (\n//       actualNode &&\n//       hasParent(lastNode.dataItem) &&\n//       hasSameParent(actualNode.dataItem, lastNode.dataItem)\n//     ) {\n//       tempNodes = tempNodes.filter(\n//         prevNode => prevNode.cloneId !== lastNode.cloneId\n//       );\n//       return [...tempNodes, actualNode];\n//     }\n//   }\n//   return [...nodes, actualNode];\n// };\n// }, [selectedNode]);\n","import styled from '@emotion/styled';\n\ninterface BarProps {\n  color?: string;\n  height?: number | string;\n  width?: number | string;\n  marginBottom?: number | string;\n}\n\nexport const Bar = styled.div<BarProps>`\n  background-color: ${({ color }) => color || '#fff'};\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => (width ? `${width}rem` : '100%')};\n  margin-bottom: ${({ marginBottom }) =>\n    marginBottom ? `${marginBottom}rem` : '0.5rem'};\n`;\n\nexport const Label = styled.label`\n  margin-right: 0.5rem;\n  display: inline-block;\n  min-width: 9rem;\n  font-size: 1.4rem;\n  margin-bottom: 0.5rem;\n`;\n\n// TODO: Modify any type\ninterface ButtonProps extends BarProps {\n  bgColor?: string;\n  color?: string;\n  type?: string;\n  radius?: number | string;\n  onClick?: any;\n}\n\nexport const Button = styled(Bar)<ButtonProps>`\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => width || 7}rem;\n  background-color: ${({ bgColor }) => bgColor || 'lightgreen'};\n  color: ${({ color }) => color || 'inherit'};\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  border-radius: ${({ radius }) => radius}px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const Li = styled.li`\n  padding: 1rem;\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\nimport { Ul, Li } from './Element';\n\nconst Root = styled.aside`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Content = styled.div`\n  background-color: #fff;\n  min-width: 50%;\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: flex-end;\n`;\n\ninterface Props {\n  close: Function;\n  entity: string;\n  selectItem: Function;\n  displayedKey: string;\n  linkId: number;\n}\nconst Modal: FunctionComponent<Props> = ({\n  children,\n  close,\n  entity,\n  selectItem,\n  displayedKey,\n  linkId,\n}) => {\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: response } = await axios({\n          method: 'get',\n          url: `data/${entity}.json`,\n        });\n        setData(response);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    if (entity) {\n      fetchData();\n    }\n  }, [entity]);\n\n  return (\n    <Root>\n      <Content>\n        <Header>\n          <Button\n            type=\"button\"\n            onClick={() => close()}\n            bgColor=\"red\"\n            color=\"white\"\n            width=\"2\"\n            height={2}\n            radius={200}\n          />\n        </Header>\n        <Ul>\n          {data.map((item: any) => {\n            if (item) {\n              return (\n                <Li\n                  key={item.guid}\n                  onClick={() => {\n                    selectItem({\n                      entity,\n                      name: item[displayedKey],\n                      value: 3000,\n                      link: [linkId],\n                      ...item,\n                    });\n                    close();\n                  }}\n                >\n                  {item[displayedKey]}\n                </Li>\n              );\n            }\n            return null;\n          })}\n        </Ul>\n        {children}\n      </Content>\n    </Root>\n  );\n};\n\nModal.propTypes = {};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Modal from './Modal';\nimport { Button } from './Templates';\nimport { ConfigState } from './forceDirected';\n\nconst Root = styled.div``;\n\ninterface Props {\n  selectItem: Function;\n  config: ConfigState;\n}\nconst Action = ({ selectItem, config: { context } }: Props) => {\n  const [displayModal, setDisplayModal] = useState<boolean>(false);\n  const [displayedKey, setDisplayedKey] = useState<string>('');\n  const [entity, setEntity] = useState<string>('');\n  const handleActions = action => {\n    setDisplayedKey(action.displayedKey);\n    setEntity(action.entity);\n    setDisplayModal(true);\n  };\n  if (!context) return null;\n  const { actions, id } = context;\n  return (\n    <Root>\n      <h2>Actions</h2>\n      {displayModal && (\n        <Modal\n          close={() => setDisplayModal(false)}\n          entity={entity}\n          selectItem={selectItem}\n          displayedKey={displayedKey}\n          linkId={id}\n        />\n      )}\n\n      {actions &&\n        actions.map((action, index) => (\n          <Button\n            key={index}\n            width={20}\n            onClick={() => {\n              handleActions(action);\n            }}\n          >\n            {action.label}\n          </Button>\n        ))}\n\n      {/* <Button\n        width={20}\n        onClick={() => {\n          handleActions({ displayedKey: 'name', entity: 'montres' });\n        }}\n      >\n        Choisir une montre\n      </Button> */}\n    </Root>\n  );\n};\n\nexport default Action;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\n\nconst Root = styled.aside`\n  grid-area: rightPanel;\n  // position: absolute;\n  min-width: 40rem;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: white;\n  box-shadow: -4px 0px 4px -3px rgba(219, 219, 219, 1);\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  background-color: lightblue;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n`;\n\n// TODO: Modify any type\ninterface Props {\n  closePanel: any;\n  title?: string;\n}\n\nconst RightPanel: FunctionComponent<Props> = ({\n  children,\n  closePanel,\n  title,\n}) => {\n  return (\n    <Root>\n      <Header>\n        <h1>{title}</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      <Content>{children}</Content>\n    </Root>\n  );\n};\n\nexport default RightPanel;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface RootProps {\n  isSelected: boolean;\n}\nconst Root = styled.li<RootProps>`\n  padding: 2rem;\n  margin: 1rem;\n  min-width: 20rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  background-color: ${({ isSelected }) => (isSelected ? 'lightBlue' : '#fff')};\n  box-shadow: 0 0 5px 0px rgba(148, 148, 148, 0.5);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    box-shadow: 0 0 10px 0px rgba(148, 148, 148, 0.5);\n  }\n  &:active {\n    box-shadow: 0 0 3px 1px rgba(148, 148, 148, 0.5);\n  }\n`;\n\ninterface Datas {\n  name: string;\n  value: number;\n  link: number;\n  entity: string;\n  children: Datas[];\n  navigation: any;\n}\n\ninterface Props {\n  itemsLength: number;\n  handleClick: Function;\n  entityName: string;\n  selectedEntity?: string;\n}\n\nconst Badge = styled.span`\n  display: inline-block;\n  border-radius: 2px;\n  min-width: 3rem;\n  background-color: #17a2b8;\n  color: white;\n`;\n\nconst Tile: FunctionComponent<Props> = ({\n  itemsLength,\n  handleClick,\n  entityName,\n  selectedEntity,\n}) => {\n  if (itemsLength)\n    return (\n      <Root\n        isSelected={selectedEntity === entityName}\n        onClick={() => {\n          handleClick(entityName);\n        }}\n      >\n        <h3>{entityName}</h3>\n        <Badge>{itemsLength}</Badge>\n      </Root>\n    );\n  return null;\n};\n\nexport default Tile;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport TileItem from './TileItem';\n\nconst Root = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  flex-wrap: wrap;\n`;\ninterface Datas {\n  name: string;\n  value: number;\n  link: number;\n  entity: string;\n  children: Datas[];\n}\ninterface Props {\n  lists: Datas[];\n  handleClick: Function;\n  selectedEntity?: string;\n}\nconst TileList: FunctionComponent<Props> = ({\n  lists,\n  handleClick,\n  selectedEntity,\n}) => {\n  const [groupedLists, setGroupList] = useState<object>({});\n\n  useEffect(() => {\n    const groupListItem = (entity: string, arrayItem: Datas[]) =>\n      arrayItem.reduce((acc, item) => {\n        const key = item[entity];\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n        acc[key].push(item);\n        return acc;\n      }, {});\n\n    if (lists) {\n      setGroupList(groupListItem('entity', lists));\n    }\n  }, [lists]);\n\n  if (Object.keys(groupedLists).length === 0)\n    return <span>No item selected</span>;\n  return (\n    <Root>\n      {Object.keys(groupedLists).map((key, index) => {\n        return (\n          <TileItem\n            key={index}\n            itemsLength={groupedLists[key].length}\n            entityName={key}\n            handleClick={handleClick}\n            selectedEntity={selectedEntity}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nexport default TileList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\n\n// TODO: Change Any\ninterface Props {\n  list: any;\n  handleSelect: Function;\n  closePanel: any;\n}\n\nconst Root = styled.div`\n  flex: 1;\n  min-width: 100%;\n  grid-area: bottomPanel;\n  box-shadow: 0px -2px 5px -1px rgba(153, 153, 153, 1);\n`;\nconst List = styled.ul``;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n  min-width: 20rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    background-color: #e4e4e4;\n  }\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: lightblue;\n  padding: 1rem;\n`;\nconst Content = styled.div``;\nconst Buttons = styled.div`\n  display: flex;\n`;\n\nconst BottomPanel: FunctionComponent<Props> = ({\n  list,\n  handleSelect,\n  closePanel,\n}) => {\n  return (\n    <Root>\n      <Header>\n        <h1>Détail</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      <Content>\n        {list && (\n          <List>\n            {list.map(entityItem => {\n              if (Object.keys(entityItem).length === 0) return null;\n              return (\n                <ListItem\n                  key={entityItem._id}\n                  onClick={() => handleSelect(entityItem)}\n                >\n                  <div>{entityItem.name}</div>\n                  <Buttons>\n                    <Button\n                      type=\"button\"\n                      bgColor=\"blue\"\n                      color=\"white\"\n                      width={2}\n                      height={2}\n                      radius={2}\n                    />\n                    <Button\n                      type=\"button\"\n                      bgColor=\"red\"\n                      color=\"white\"\n                      width={2}\n                      height={2}\n                      radius={2}\n                    />\n                  </Buttons>\n                </ListItem>\n              );\n            })}\n          </List>\n        )}\n      </Content>\n    </Root>\n  );\n};\n\nexport default BottomPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\ninterface Props {\n  item: any;\n  selectNode: Function;\n  prevSelectedNode: {\n    current: any;\n  };\n}\n\nconst Label = styled.label`\n  display: inline-block;\n  margin-right: 1rem;\n  font-weight: bold;\n`;\n\nconst ListItem = styled.li`\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst FormBuilder: React.FC<Props> = ({\n  item,\n  selectNode,\n  prevSelectedNode,\n}) => {\n  const renderForm = (object: any) => {\n    return Object.entries(object).map((entry, index) => {\n      const label: string = entry[0];\n      const value: any = entry[1];\n      if (!value) return null;\n      return (\n        <div key={index}>\n          <Label>{`${label}:`}</Label>\n          {label === 'children' && (\n            <ul>\n              {value.map((child, idx) => (\n                <ListItem\n                  key={idx}\n                  onClick={() => {\n                    selectNode(child);\n                  }}\n                >\n                  {child.name}\n                </ListItem>\n              ))}\n            </ul>\n          )}\n          {typeof value === 'string' || typeof value === 'number' ? (\n            <span>{value}</span>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  return (\n    <div>\n      {prevSelectedNode.current && (\n        <span\n          onClick={() => {\n            selectNode(prevSelectedNode.current);\n          }}\n        >{`<-`}</span>\n      )}\n      <div>{renderForm(item)}</div>\n    </div>\n  );\n};\n\nexport default FormBuilder;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport ForceDirectedChart from './ForceDirectedChart';\nimport Action from './Action';\nimport RightPanel from './RightPanel';\nimport TileList from './Tile/TileList';\nimport BottomPanel from './BottomPanel';\nimport FormBuilder from './FormBuilder';\nimport { ConfigState } from './forceDirected';\n\nconst Root = styled.main`\n  display: grid;\n  position: relative;\n  height: 100%;\n  grid-area: content;\n  grid-template-areas:\n    'header rightPanel'\n    'content rightPanel'\n    'bottomPanel rightPanel';\n  grid-template-columns: 1fr auto;\n  grid-template-rows: 5rem auto 1fr;\n`;\nconst Navigation = styled.article`\n  flex: 1;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Row = styled.section`\n  display: flex;\n  margin-top: 2rem;\n`;\n\nconst Header = styled.header`\n  grid-area: header;\n`;\n\nconst Content = styled.div`\n  grid-area: content;\n`;\n\nfunction Force({ match }) {\n  interface Datas {\n    name: string;\n    value: number;\n    link: number;\n    entity: string;\n    children: Datas[];\n    id: string;\n    navigation: any;\n  }\n  const initConfigState = {\n    series: [],\n    context: {},\n  };\n  const prevSelectedNode = useRef<Datas | null>(null);\n  const [selectedNode, setSelectedNode] = useState<Datas | null>(null);\n  const [showRightPanel, setShowRightPanel] = useState<boolean>(false);\n  const [showBottomPanel, setShowBottomPanel] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [datas, setDatas] = useState<any>(null);\n  const [selectedEntity, setSelectedEntity] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [config, setConfig] = useState<ConfigState>(initConfigState);\n\n  const handleClick = (entityName: string) => {\n    setSelectedEntity(entityName);\n    setShowBottomPanel(true);\n  };\n\n  const handleSelectedNode = (response: Datas) => {\n    prevSelectedNode.current = null;\n    setSelectedNode(response);\n    setShowRightPanel(true);\n  };\n\n  const handleSelectedSubItem = (response: Datas) => {\n    if (!prevSelectedNode.current) {\n      prevSelectedNode.current = selectedNode;\n    } else {\n      prevSelectedNode.current = null;\n    }\n    setSelectedNode(response);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const { data } = await axios({\n          method: 'get',\n          url: `data/${match.params.entity}Config.json`,\n        });\n        setConfig(data);\n        setIsLoading(false);\n        setError('');\n      } catch (err) {\n        setIsLoading(false);\n        setConfig(initConfigState);\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, [match.params.entity]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios({\n          method: 'get',\n          url: `data/${match.params.entity}.json`,\n        });\n        setDatas(data);\n        setError('');\n      } catch (err) {\n        setDatas(null);\n        setError(err.message);\n      }\n    };\n    if (Object.keys(config.context).length !== 0) {\n      fetchData();\n    }\n  }, [config, match.params.entity]);\n\n  if (isLoading) return null;\n  if (Object.keys(config.context).length === 0 && !isLoading)\n    return <span>Impossible de charger la configuration</span>;\n  return (\n    <Root>\n      {error && <span>{error}</span>}\n      <Header>\n        <h1>{config.context.name}</h1>\n      </Header>\n      <Content>\n        <Row>\n          <Action\n            selectItem={(item: Datas) => {\n              setDatas(prevDatas => {\n                return {\n                  ...prevDatas,\n                  children: [...prevDatas.children, item],\n                };\n              });\n            }}\n            config={config}\n          />\n          <Navigation>\n            <ForceDirectedChart\n              retreiveSelectedNode={handleSelectedNode}\n              datas={datas}\n              config={config}\n            />\n          </Navigation>\n        </Row>\n        <Column>\n          <h2>Sélection détail</h2>\n          {datas && datas.children.length > 0 ? (\n            <TileList\n              lists={datas.children}\n              handleClick={handleClick}\n              selectedEntity={selectedEntity}\n            />\n          ) : (\n            <span>Aucune sélection</span>\n          )}\n        </Column>\n      </Content>\n\n      {showRightPanel && (\n        <RightPanel\n          closePanel={() => setShowRightPanel(false)}\n          title={selectedNode ? selectedNode.name : 'Détail'}\n        >\n          <FormBuilder\n            item={selectedNode}\n            selectNode={handleSelectedSubItem}\n            prevSelectedNode={prevSelectedNode}\n          />\n        </RightPanel>\n      )}\n      {showBottomPanel && (\n        <BottomPanel\n          list={datas.children.filter(list => {\n            return list.entity === selectedEntity;\n          })}\n          handleSelect={handleSelectedNode}\n          closePanel={() => setShowBottomPanel(false)}\n        />\n      )}\n    </Root>\n  );\n}\n\nexport default Force;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { MenuProps } from './forceDirected';\n\nconst Root = styled.aside`\n  grid-area: leftPanel;\n  background-color: lavender;\n`;\n\nconst LeftPanel = ({ menus }) => {\n  if (!menus) return null;\n  return (\n    <Root>\n      <ul>\n        {menus.map((menu: MenuProps) => (\n          <li key={menu.label}>\n            <Link to={menu.link}>{menu.label}</Link>\n          </li>\n        ))}\n      </ul>\n    </Root>\n  );\n};\n\nLeftPanel.propTypes = {};\n\nexport default LeftPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Root = styled.header`\n  grid-area: header;\n  display: flex;\n  justify-content: space-between;\n  background-color: lightgray;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n`;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n`;\n\nconst Header = () => {\n  return (\n    <Root>\n      <div>logo</div>\n      <List>\n        <ListItem>link1</ListItem>\n        <ListItem>link2</ListItem>\n        <ListItem>link3</ListItem>\n      </List>\n    </Root>\n  );\n};\n\nHeader.propTypes = {};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport Force from './forceDirected/Force';\nimport LeftPanel from './forceDirected/LeftPanel';\nimport Header from './forceDirected/Header';\nimport { MenuProps } from './forceDirected/forceDirected';\nimport Axios from 'axios';\n\nconst Root = styled.main`\n  display: grid;\n  position: relative;\n  height: 100%;\n  grid-template-areas:\n    'header header'\n    'leftPanel content';\n  grid-template-columns: 20rem auto;\n  grid-template-rows: 5rem auto;\n`;\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>HomePage</h1>\n      <p>Un dashboard de ouf</p>\n    </div>\n  );\n};\nconst Content = styled.div`\n  grid-area: content;\n`;\nconst App = () => {\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [menus, setMenus] = useState<MenuProps[] | null>(null);\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const { data } = await Axios({\n          method: 'get',\n          url: `data/config.json`,\n        });\n        setMenus(data.menus);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <Root>\n      {error && <span>{error}</span>}\n      <Header />\n      {isLoading ? (\n        <span>Chargement en cours</span>\n      ) : (\n        <>\n          <LeftPanel menus={menus} />\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/:entity\" component={Force} />\n            </Switch>\n          </Content>\n        </>\n      )}\n    </Root>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
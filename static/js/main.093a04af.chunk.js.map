{"version":3,"sources":["assets/icons/list.svg","assets/icons/valorisation.svg","forceDirected/ForceDirectedChart.tsx","forceDirected/Templates.tsx","forceDirected/Element.ts","forceDirected/Modal.tsx","forceDirected/Action.tsx","assets/icons/backIcon.svg","forceDirected/RightPanel.tsx","forceDirected/Tile/TileItem.tsx","forceDirected/Tile/TileList.tsx","forceDirected/BottomPanel.tsx","forceDirected/FormBuilder.tsx","forceDirected/FakeRightPanelTemplate.tsx","forceDirected/Valorisation.tsx","forceDirected/Force.tsx","forceDirected/LeftPanel.tsx","forceDirected/Header.tsx","App.tsx","store/reducers/forceReducer.js","store/index.js","serviceWorker.ts","index.tsx"],"names":["module","exports","Chart","styled","div","menuRefData","containerHeight","actionType","weight","image","ValorisationIcon","x","y","callbackKey","ListIcon","ForceDirectedChart","retreiveSelectedNodeInformation","datas","config","setActionType","seriesRef","useRef","selectedNodeRef","selectedPieChart","buildPieChart","container","height","bbox","points","menuRef","createChild","am4chart","isMeasured","width","moveTo","toBack","data","menuSeries","series","push","dataFields","value","hiddenState","properties","endAngle","defaultState","transitionDuration","ticks","template","disabled","slices","togglable","strokeWidth","strokeOpacity","tooltipText","labels","text","icon","am4core","propertyFields","href","hoverable","events","on","target","pieChart","dataItem","component","chart","dataContext","activeNode","current","isActive","hide","setTimeout","dispose","useEffect","am4themesAnimated","ForceDirectedTree","padding","ForceDirectedSeries","nodes","children","values","find","child","nodePieChart","newPieChart","dataToArray","Array","isArray","id","Bar","color","marginBottom","Label","label","Button","bgColor","radius","Ul","ul","Li","li","Root","aside","Content","Header","header","Modal","close","entity","selectItem","displayedKey","linkId","React","useState","setData","a","axios","method","url","response","console","error","message","fetchData","type","onClick","map","item","key","guid","name","link","Action","context","displayModal","setDisplayModal","setDisplayedKey","setEntity","actions","action","index","handleActions","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","ReturnButton","ReturnIcon","SubHeader","RightPanel","closePanel","selectNode","prevSelectedNode","tabIndex","isSelected","Badge","span","Tile","itemsLength","handleClick","entityName","selectedEntity","TileList","lists","groupedLists","setGroupList","reduce","acc","TileItem","List","ListItem","Buttons","BottomPanel","list","selectNodeInformation","entityItem","_id","FormBuilder","object","entries","entry","idx","Row","Column","FakeRightPanelTemplate","Valorisation","main","Navigation","article","section","Force","match","initConfigState","selectedNode","setSelectedNode","showRightPanel","setShowRightPanel","showBottomPanel","setShowBottomPanel","setError","setDatas","setSelectedEntity","isLoading","setIsLoading","setConfig","handleSelectedNodeInformation","handleSelectedSubItem","params","prevDatas","filter","LeftPanel","menus","menu","to","Home","App","setMenus","Axios","exact","path","forceReducer","state","store","createStore","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.093a04af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/list.b39fb484.svg\";","module.exports = __webpack_public_path__ + \"static/media/valorisation.ec937b18.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useRef } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport * as am4chart from '@amcharts/amcharts4/charts';\nimport {\n  ForceDirectedTree,\n  ForceDirectedSeries,\n  ForceDirectedNode,\n} from '@amcharts/amcharts4/plugins/forceDirected';\nimport styled from '@emotion/styled';\nimport ListIcon from '../assets/icons/list.svg';\nimport ValorisationIcon from '../assets/icons/valorisation.svg';\n// eslint-disable-next-line import/no-unresolved\nimport { ConfigState } from './forceDirected';\n\nconst Chart = styled.div`\n  height: 30rem;\n`;\n\ninterface Props {\n  retreiveSelectedNodeInformation: Function;\n  setActionType: Function;\n  datas: any;\n  config: ConfigState;\n}\nconst menuRefData = (containerHeight: number) => {\n  const iconSizeMiddle = 30 / 2;\n  return [\n    {\n      actionType: 'valorisation',\n      weight: 90,\n      image: ValorisationIcon,\n      x: containerHeight / 2 - iconSizeMiddle,\n      y: -(containerHeight / 2 + iconSizeMiddle),\n      callbackKey: 'valorisation',\n    },\n    {\n      actionType: 'list',\n      weight: 90,\n      image: ListIcon,\n      x: containerHeight / 2 - iconSizeMiddle,\n      y: containerHeight / 2 - iconSizeMiddle,\n      callbackKey: 'toggle',\n    },\n    {\n      actionType: 'valorisation',\n      weight: 90,\n      image: ValorisationIcon,\n      x: -(containerHeight / 2 + iconSizeMiddle),\n      y: containerHeight / 2 - iconSizeMiddle,\n      callbackKey: 'valorisation',\n    },\n    {\n      actionType: 'list',\n      weight: 90,\n      image: ListIcon,\n      x: -(containerHeight / 2 + iconSizeMiddle),\n      y: -(containerHeight / 2 + iconSizeMiddle),\n      callbackKey: 'toggle',\n    },\n  ];\n};\n\nfunction ForceDirectedChart({\n  retreiveSelectedNodeInformation,\n  datas,\n  config,\n  setActionType,\n}: Props) {\n  const seriesRef = useRef<ForceDirectedSeries | null>(null);\n  const selectedNodeRef = useRef<ForceDirectedNode | null>(null);\n  const selectedPieChart = useRef<any | null>(null);\n\n  const buildPieChart = container => {\n    const { height } = container.bbox;\n    const points: am4core.IPoint = {\n      x: -(height + 150) / 2,\n      y: -(height + 150) / 2,\n    };\n    /**\n     * Menu Configuration\n     */\n    const menuRef = container.createChild(am4chart.PieChart);\n    menuRef.isMeasured = false;\n    menuRef.width = height + 150;\n    menuRef.height = height + 150;\n    menuRef.moveTo(points);\n    menuRef.isMeasured = false;\n    menuRef.toBack();\n    menuRef.data = menuRefData(height);\n\n    /**\n     * MenuSeries (PieSeries)\n     */\n    const menuSeries = menuRef.series.push(new am4chart.PieSeries());\n    menuSeries.dataFields.value = 'weight';\n    menuSeries.hiddenState.properties.endAngle = -90;\n    menuSeries.defaultState.transitionDuration = 300;\n    menuSeries.ticks.template.disabled = true;\n    menuSeries.slices.template.togglable = false;\n    menuSeries.slices.template.strokeWidth = 2;\n    menuSeries.slices.template.strokeOpacity = 1;\n    menuSeries.slices.template.tooltipText = '';\n    menuSeries.labels.template.text = '';\n\n    /**\n     * Add icons\n     */\n    const icon: am4core.Image = menuSeries.slices.template.createChild(\n      am4core.Image\n    );\n    icon.isMeasured = false;\n    icon.propertyFields.href = 'image';\n    icon.width = 30;\n    icon.height = 30;\n    icon.propertyFields.x = 'x';\n    icon.propertyFields.y = 'y';\n    icon.hoverable = false;\n\n    /**\n     * Events Callback\n     */\n    menuSeries.slices.template.events.on('hit', ({ target }) => {\n      const pieChart: am4chart.PieChart = target.dataItem.component.chart;\n      const { actionType } = target.dataItem.dataContext;\n      if (actionType === 'list') {\n        const activeNode = selectedNodeRef.current;\n        if (activeNode) {\n          activeNode.isActive = !activeNode.isActive;\n        }\n      }\n      setActionType(actionType);\n      pieChart.hide(150);\n      setTimeout(() => {\n        pieChart.dispose();\n      }, 170);\n    });\n    return menuRef;\n  };\n\n  useEffect(() => {\n    am4core.useTheme(am4themesAnimated);\n    const chart = am4core.create('chartdiv', ForceDirectedTree);\n    chart.padding(0, 0, 0, 0);\n\n    if (config && chart) {\n      /**\n       * ChartSeries Configuration\n       */\n      seriesRef.current = new ForceDirectedSeries();\n      chart.series.push(seriesRef.current);\n      seriesRef.current.config = config.series;\n      seriesRef.current.nodes.template.togglable = false;\n      /**\n       * ChartSeries Events\n       */\n      seriesRef.current.nodes.template.events.on('hit', ({ target }) => {\n        const pieChart = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (!pieChart) {\n          buildPieChart(target);\n        }\n        selectedNodeRef.current = target;\n        setActionType('information');\n        retreiveSelectedNodeInformation(target.dataItem.dataContext);\n      });\n\n      seriesRef.current.nodes.template.events.on('over', ({ target }) => {\n        const nodePieChart = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (!nodePieChart && selectedPieChart.current) {\n          selectedPieChart.current.dispose();\n          const newPieChart = buildPieChart(target);\n          selectedPieChart.current = newPieChart;\n        } else if (!nodePieChart) {\n          const newPieChart = buildPieChart(target);\n          selectedPieChart.current = newPieChart;\n        }\n        selectedNodeRef.current = target;\n      });\n\n      seriesRef.current.nodes.template.events.on('doublehit', ({ target }) => {\n        const pieChart = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (pieChart) {\n          pieChart.dispose();\n        }\n      });\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose();\n      }\n    };\n  }, [config]);\n\n  useEffect(() => {\n    if (seriesRef.current && datas) {\n      let dataToArray = datas;\n      if (!Array.isArray(dataToArray)) {\n        dataToArray = [dataToArray];\n      }\n      seriesRef.current.data = dataToArray;\n    }\n  }, [datas]);\n\n  return <Chart id=\"chartdiv\" />;\n}\n\nexport default ForceDirectedChart;\n\n// useEffect(() => {\n// const hasParent = (node: ForceDirectedSeriesDataItem) => !!node.parent;\n// const getParentId = (node?: ForceDirectedSeriesDataItem) =>\n//   node && node.parent && node.parent.cloneId;\n\n// const hasSameParent = (\n//   node1: ForceDirectedSeriesDataItem,\n//   node2: ForceDirectedSeriesDataItem\n// ) => getParentId(node1) === getParentId(node2);\n\n// const removeFollowingChildNode = (\n//   nodes: ForceDirectedNode[],\n//   nodeToRemove?: ForceDirectedNode\n// ) => {\n//   const existingCrumbIndex = nodes.findIndex(\n//     node =>\n//       nodeToRemove &&\n//       node.dataItem.cloneId === nodeToRemove.dataItem.cloneId\n//   );\n//   if (existingCrumbIndex !== -1) {\n//     return nodes.slice(0, existingCrumbIndex + 1);\n//   }\n//   return nodes;\n// };\n\n// const nodeWithSameLevel = (\n//   nodes: ForceDirectedNode[],\n//   parentId?: string\n// ) => {\n//   if (!nodes || !parentId) return null;\n//   const foundedNode = nodes.find(\n//     node => getParentId(node.dataItem) === parentId\n//   );\n//   if (foundedNode) return foundedNode;\n//   return null;\n// };\n\n// const handleSameLevel = (\n//   nodes: ForceDirectedNode[],\n//   actualNode: ForceDirectedNode\n// ) => {\n//   /**\n//     it doesn't work when 2nd generation are click\n//    */\n//   const alreadyExists = nodes.some(\n//     node =>\n//       actualNode && node.dataItem.cloneId === actualNode.dataItem.cloneId\n//   );\n//   if (alreadyExists) return removeFollowingChildNode(nodes, actualNode);\n\n//   const lastNode: ForceDirectedNode =\n//     nodes[nodes.length - 1] ||\n//     (actualNode &&\n//       nodeWithSameLevel(nodes, getParentId(actualNode.dataItem)));\n\n//   if (lastNode) {\n//     let tempNodes = removeFollowingChildNode(nodes, lastNode);\n//     if (\n//       actualNode &&\n//       hasParent(lastNode.dataItem) &&\n//       hasSameParent(actualNode.dataItem, lastNode.dataItem)\n//     ) {\n//       tempNodes = tempNodes.filter(\n//         prevNode => prevNode.cloneId !== lastNode.cloneId\n//       );\n//       return [...tempNodes, actualNode];\n//     }\n//   }\n//   return [...nodes, actualNode];\n// };\n// }, [selectedNodeRef]);\n","import styled from '@emotion/styled';\n\ninterface BarProps {\n  color?: string;\n  height?: number | string;\n  width?: number | string;\n  marginBottom?: number | string;\n}\n\nexport const Bar = styled.div<BarProps>`\n  background-color: ${({ color }) => color || '#fff'};\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => (width ? `${width}rem` : '100%')};\n  margin-bottom: ${({ marginBottom }) =>\n    marginBottom ? `${marginBottom}rem` : '0.5rem'};\n`;\n\nexport const Label = styled.label`\n  margin-right: 0.5rem;\n  display: inline-block;\n  min-width: 9rem;\n  font-size: 1.4rem;\n  margin-bottom: 0.5rem;\n`;\n\n// TODO: Modify any type\ninterface ButtonProps extends BarProps {\n  bgColor?: string;\n  color?: string;\n  type?: string;\n  radius?: number | string;\n  onClick?: any;\n}\n\nexport const Button = styled(Bar)<ButtonProps>`\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => width || 7}rem;\n  background-color: ${({ bgColor }) => bgColor || 'lightgreen'};\n  color: ${({ color }) => color || 'inherit'};\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  border-radius: ${({ radius }) => radius}px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const Li = styled.li`\n  padding: 1rem;\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\nimport { Ul, Li } from './Element';\n\nconst Root = styled.aside`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Content = styled.div`\n  background-color: #fff;\n  min-width: 50%;\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: flex-end;\n`;\n\ninterface Props {\n  close: Function;\n  entity: string;\n  selectItem: Function;\n  displayedKey: string;\n  linkId: number;\n}\nconst Modal: FunctionComponent<Props> = ({\n  children,\n  close,\n  entity,\n  selectItem,\n  displayedKey,\n  linkId,\n}) => {\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: response } = await axios({\n          method: 'get',\n          url: `data/${entity}.json`,\n        });\n        setData(response);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    if (entity) {\n      fetchData();\n    }\n  }, [entity]);\n\n  return (\n    <Root>\n      <Content>\n        <Header>\n          <Button\n            type=\"button\"\n            onClick={() => close()}\n            bgColor=\"red\"\n            color=\"white\"\n            width=\"2\"\n            height={2}\n            radius={200}\n          />\n        </Header>\n        <Ul>\n          {data.map((item: any) => {\n            if (item) {\n              return (\n                <Li\n                  key={item.guid}\n                  onClick={() => {\n                    selectItem({\n                      entity,\n                      name: item[displayedKey],\n                      value: 3000,\n                      link: [linkId],\n                      ...item,\n                    });\n                    close();\n                  }}\n                >\n                  {item[displayedKey]}\n                </Li>\n              );\n            }\n            return null;\n          })}\n        </Ul>\n        {children}\n      </Content>\n    </Root>\n  );\n};\n\nModal.propTypes = {};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Modal from './Modal';\nimport { Button } from './Templates';\n// eslint-disable-next-line import/no-unresolved\nimport { ConfigState } from './forceDirected';\n\nconst Root = styled.div``;\n\ninterface Props {\n  selectItem: Function;\n  config: ConfigState;\n}\nconst Action = ({ selectItem, config: { context } }: Props) => {\n  const [displayModal, setDisplayModal] = useState<boolean>(false);\n  const [displayedKey, setDisplayedKey] = useState<string>('');\n  const [entity, setEntity] = useState<string>('');\n  const handleActions = action => {\n    setDisplayedKey(action.displayedKey);\n    setEntity(action.entity);\n    setDisplayModal(true);\n  };\n  if (!context) return null;\n  const { actions, id } = context;\n  return (\n    <Root>\n      <h2>Actions</h2>\n      {displayModal && (\n        <Modal\n          close={() => setDisplayModal(false)}\n          entity={entity}\n          selectItem={selectItem}\n          displayedKey={displayedKey}\n          linkId={id}\n        />\n      )}\n\n      {actions &&\n        actions.map((action, index) => (\n          <Button\n            key={index}\n            width={20}\n            onClick={() => {\n              handleActions(action);\n            }}\n          >\n            {action.label}\n          </Button>\n        ))}\n\n      {/* <Button\n        width={20}\n        onClick={() => {\n          handleActions({ displayedKey: 'name', entity: 'montres' });\n        }}\n      >\n        Choisir une montre\n      </Button> */}\n    </Root>\n  );\n};\n\nexport default Action;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z\"\n});\n\nvar SvgBackIcon = function SvgBackIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"chevron-circle-left\",\n    className: \"svg-inline--fa fa-chevron-circle-left fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBackIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/backIcon.9ff83b3f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\nimport { ReactComponent as ReturnIcon } from '../assets/icons/backIcon.svg';\n\nconst Root = styled.aside`\n  grid-area: rightPanel;\n  // position: absolute;\n  min-width: 40rem;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: white;\n  box-shadow: -4px 0px 4px -3px rgba(219, 219, 219, 1);\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: lightblue;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n`;\n\nconst ReturnButton = styled(ReturnIcon)`\n  display: block;\n  margin: 0.5rem;\n`;\n\nconst SubHeader = styled.div`\n  background-color: lightGray;\n  display: flex;\n  align-items: center;\n`;\n\n// TODO: Modify any type\ninterface Props {\n  closePanel: any;\n  title?: string;\n  actionType: string | null;\n  prevSelectedNode: any;\n  selectNode: Function;\n  setActionType: Function;\n}\n\nconst RightPanel: FunctionComponent<Props> = ({\n  children,\n  closePanel,\n  title,\n  actionType,\n  selectNode,\n  prevSelectedNode,\n  setActionType,\n}) => {\n  return (\n    <Root>\n      <Header>\n        <h1>{title}</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      {(prevSelectedNode.current || actionType === 'valorisation') && (\n        <SubHeader>\n          <ReturnButton\n            height=\"20\"\n            width=\"20\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              if (actionType === 'valorisation') {\n                setActionType(null);\n              } else {\n                selectNode(prevSelectedNode.current);\n              }\n            }}\n          />\n        </SubHeader>\n      )}\n      <Content>{children}</Content>\n    </Root>\n  );\n};\n\nexport default RightPanel;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface RootProps {\n  isSelected: boolean;\n}\nconst Root = styled.li<RootProps>`\n  padding: 2rem;\n  margin: 1rem;\n  min-width: 20rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  background-color: ${({ isSelected }) => (isSelected ? 'lightBlue' : '#fff')};\n  box-shadow: 0 0 5px 0px rgba(148, 148, 148, 0.5);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    box-shadow: 0 0 10px 0px rgba(148, 148, 148, 0.5);\n  }\n  &:active {\n    box-shadow: 0 0 3px 1px rgba(148, 148, 148, 0.5);\n  }\n`;\n\ninterface Datas {\n  name: string;\n  value: number;\n  link: number;\n  entity: string;\n  children: Datas[];\n  navigation: any;\n}\n\ninterface Props {\n  itemsLength: number;\n  handleClick: Function;\n  entityName: string;\n  selectedEntity?: string;\n}\n\nconst Badge = styled.span`\n  display: inline-block;\n  border-radius: 2px;\n  min-width: 3rem;\n  background-color: #17a2b8;\n  color: white;\n`;\n\nconst Tile: FunctionComponent<Props> = ({\n  itemsLength,\n  handleClick,\n  entityName,\n  selectedEntity,\n}) => {\n  if (itemsLength)\n    return (\n      <Root\n        isSelected={selectedEntity === entityName}\n        onClick={() => {\n          handleClick(entityName);\n        }}\n      >\n        <h3>{entityName}</h3>\n        <Badge>{itemsLength}</Badge>\n      </Root>\n    );\n  return null;\n};\n\nexport default Tile;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport TileItem from './TileItem';\n\nconst Root = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  flex-wrap: wrap;\n`;\ninterface Datas {\n  name: string;\n  value: number;\n  link: number;\n  entity: string;\n  children: Datas[];\n}\ninterface Props {\n  lists: Datas[];\n  handleClick: Function;\n  selectedEntity?: string;\n}\nconst TileList: FunctionComponent<Props> = ({\n  lists,\n  handleClick,\n  selectedEntity,\n}) => {\n  const [groupedLists, setGroupList] = useState<object>({});\n\n  useEffect(() => {\n    const groupListItem = (entity: string, arrayItem: Datas[]) =>\n      arrayItem.reduce((acc, item) => {\n        const key = item[entity];\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n        acc[key].push(item);\n        return acc;\n      }, {});\n\n    if (lists) {\n      setGroupList(groupListItem('entity', lists));\n    }\n  }, [lists]);\n\n  if (Object.keys(groupedLists).length === 0)\n    return <span>No item selected</span>;\n  return (\n    <Root>\n      {Object.keys(groupedLists).map((key, index) => {\n        return (\n          <TileItem\n            key={index}\n            itemsLength={groupedLists[key].length}\n            entityName={key}\n            handleClick={handleClick}\n            selectedEntity={selectedEntity}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nexport default TileList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\n\nconst Root = styled.div`\n  flex: 1;\n  min-width: 100%;\n  grid-area: bottomPanel;\n  box-shadow: 0px -2px 5px -1px rgba(153, 153, 153, 1);\n`;\nconst List = styled.ul``;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n  min-width: 20rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    background-color: #e4e4e4;\n  }\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: lightblue;\n  padding: 1rem;\n`;\nconst Content = styled.div``;\nconst Buttons = styled.div`\n  display: flex;\n`;\n\n// TODO: Change Any\ninterface Props {\n  list: any;\n  selectNodeInformation: Function;\n  setActionType: Function;\n  closePanel: any;\n}\nconst BottomPanel: FunctionComponent<Props> = ({\n  list,\n  selectNodeInformation,\n  closePanel,\n  setActionType,\n}) => {\n  return (\n    <Root>\n      <Header>\n        <h1>Détail</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      <Content>\n        {list && (\n          <List>\n            {list.map(entityItem => {\n              if (Object.keys(entityItem).length === 0) return null;\n              return (\n                <ListItem\n                  key={entityItem._id}\n                  onClick={() => {\n                    setActionType('information');\n                    selectNodeInformation(entityItem);\n                  }}\n                >\n                  <div>{entityItem.name}</div>\n                  <Buttons>\n                    <Button\n                      type=\"button\"\n                      bgColor=\"blue\"\n                      color=\"white\"\n                      width={2}\n                      height={2}\n                      radius={2}\n                    />\n                    <Button\n                      type=\"button\"\n                      bgColor=\"red\"\n                      color=\"white\"\n                      width={2}\n                      height={2}\n                      radius={2}\n                    />\n                  </Buttons>\n                </ListItem>\n              );\n            })}\n          </List>\n        )}\n      </Content>\n    </Root>\n  );\n};\n\nexport default BottomPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\n\ninterface Props {\n  item: any;\n  selectNode: Function;\n  setActionType: Function;\n  prevSelectedNode: {\n    current: any;\n  };\n}\n\nconst Label = styled.label`\n  display: inline-block;\n  margin-right: 1rem;\n  font-weight: bold;\n`;\n\nconst ListItem = styled.li`\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst FormBuilder: React.FC<Props> = ({\n  item,\n  selectNode,\n  prevSelectedNode,\n  setActionType,\n}) => {\n  const renderForm = (object: any) => {\n    return Object.entries(object).map((entry, index) => {\n      const label: string = entry[0];\n      const value: any = entry[1];\n      if (!value) return null;\n      return (\n        <div key={index}>\n          <Label>{`${label}:`}</Label>\n          {label === 'children' && (\n            <ul>\n              {value.map((child, idx) => (\n                <ListItem key={idx} onClick={() => selectNode(child)}>\n                  {child.name}\n                </ListItem>\n              ))}\n            </ul>\n          )}\n          {typeof value === 'string' || typeof value === 'number' ? (\n            <span>{value}</span>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  return (\n    <div>\n      <div>{renderForm(item)}</div>\n      <div>\n        <Button width={10} onClick={() => setActionType('valorisation')}>\n          Valorisation\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default FormBuilder;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Bar, Label, Button } from './Templates';\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n`;\n\nconst FakeRightPanelTemplate = () => {\n  return (\n    <div>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} color=\"gray\" />\n      </Row>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} width={10} color=\"gray\" />\n      </Row>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} color=\"gray\" />\n      </Row>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} width={10} color=\"gray\" />\n      </Row>\n      <Column>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={1.5} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={15} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={20} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={15} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={20} color=\"gray\" marginBottom={0.5} />\n      </Column>\n    </div>\n  );\n};\n\nFakeRightPanelTemplate.propTypes = {};\n\nexport default FakeRightPanelTemplate;\n","import React from 'react';\nimport FakeRightPanelTemplate from './FakeRightPanelTemplate';\nimport { Button } from './Templates';\n\ninterface Props {\n  setActionType: Function;\n}\nfunction Valorisation<Props>({ setActionType }) {\n  return (\n    <div>\n      <h1>Valorisation panel</h1>\n      <FakeRightPanelTemplate />\n      <Button bgColor=\"orange\" onClick={() => setActionType(null)}>\n        Close\n      </Button>\n    </div>\n  );\n}\n\nexport default Valorisation;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport ForceDirectedChart from './ForceDirectedChart';\nimport Action from './Action';\nimport RightPanel from './RightPanel';\nimport TileList from './Tile/TileList';\nimport BottomPanel from './BottomPanel';\nimport FormBuilder from './FormBuilder';\nimport { ConfigState } from './forceDirected';\nimport Valorisation from './Valorisation';\n\nconst Root = styled.main`\n  display: grid;\n  position: relative;\n  height: 100%;\n  grid-area: content;\n  grid-template-areas:\n    'header rightPanel'\n    'content rightPanel'\n    'bottomPanel rightPanel';\n  grid-template-columns: 1fr auto;\n  grid-template-rows: 5rem auto 1fr;\n`;\nconst Navigation = styled.article`\n  flex: 1;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Row = styled.section`\n  display: flex;\n  margin-top: 2rem;\n`;\n\nconst Header = styled.header`\n  grid-area: header;\n`;\n\nconst Content = styled.div`\n  grid-area: content;\n`;\n\nfunction Force({ match }) {\n  interface Datas {\n    name: string;\n    value: number;\n    link: number;\n    entity: string;\n    children: Datas[];\n    id: string;\n    navigation: any;\n  }\n  const initConfigState = {\n    series: [],\n    context: {},\n  };\n  const prevSelectedNode = useRef<Datas | null>(null);\n  const [selectedNode, setSelectedNode] = useState<Datas | null>(null);\n  const [actionType, setActionType] = useState<string | null>(null);\n  const [showRightPanel, setShowRightPanel] = useState<boolean>(false);\n  const [showBottomPanel, setShowBottomPanel] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [datas, setDatas] = useState<any>(null);\n  const [selectedEntity, setSelectedEntity] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [config, setConfig] = useState<ConfigState>(initConfigState);\n\n  const handleClick = (entityName: string) => {\n    setSelectedEntity(entityName);\n    setShowBottomPanel(true);\n  };\n\n  const handleSelectedNodeInformation = (response: Datas) => {\n    prevSelectedNode.current = null;\n    setSelectedNode(response);\n    setShowRightPanel(true);\n  };\n\n  const handleSelectedSubItem = (response: Datas) => {\n    if (!prevSelectedNode.current) {\n      prevSelectedNode.current = selectedNode;\n    } else {\n      prevSelectedNode.current = null;\n    }\n    setSelectedNode(response);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const { data } = await axios({\n          method: 'get',\n          url: `data/${match.params.entity}Config.json`,\n        });\n        setConfig(data);\n        setIsLoading(false);\n        setError('');\n      } catch (err) {\n        setIsLoading(false);\n        setConfig(initConfigState);\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, [match.params.entity]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios({\n          method: 'get',\n          url: `data/${match.params.entity}.json`,\n        });\n        setDatas(data);\n        setError('');\n      } catch (err) {\n        setDatas(null);\n        setError(err.message);\n      }\n    };\n    if (Object.keys(config.context).length !== 0) {\n      fetchData();\n    }\n  }, [config, match.params.entity]);\n\n  if (isLoading) return null;\n  if (Object.keys(config.context).length === 0 && !isLoading)\n    return <span>Impossible de charger la configuration</span>;\n\n  return (\n    <Root>\n      {error && <span>{error}</span>}\n      <Header>\n        <h1>{config.context.name}</h1>\n      </Header>\n      <Content>\n        <Row>\n          <Action\n            selectItem={(item: Datas) =>\n              setDatas(prevDatas => ({\n                ...prevDatas,\n                children: [...prevDatas.children, item],\n              }))\n            }\n            config={config}\n          />\n          <Navigation>\n            <ForceDirectedChart\n              retreiveSelectedNodeInformation={handleSelectedNodeInformation}\n              datas={datas}\n              config={config}\n              setActionType={setActionType}\n            />\n          </Navigation>\n        </Row>\n        <Column>\n          <h2>Sélection détail</h2>\n          {datas && datas.children.length > 0 ? (\n            <TileList\n              lists={datas.children}\n              handleClick={handleClick}\n              selectedEntity={selectedEntity}\n            />\n          ) : (\n            <span>Aucune sélection</span>\n          )}\n        </Column>\n      </Content>\n\n      {showRightPanel && (\n        <RightPanel\n          closePanel={() => setShowRightPanel(false)}\n          title={selectedNode ? selectedNode.name : 'Détail'}\n          actionType={actionType}\n          selectNode={handleSelectedSubItem}\n          prevSelectedNode={prevSelectedNode}\n          setActionType={setActionType}\n        >\n          {actionType !== 'valorisation' ? (\n            <FormBuilder\n              item={selectedNode}\n              selectNode={handleSelectedSubItem}\n              prevSelectedNode={prevSelectedNode}\n              setActionType={setActionType}\n            />\n          ) : (\n            <Valorisation setActionType={setActionType} />\n          )}\n        </RightPanel>\n      )}\n      {showBottomPanel && (\n        <BottomPanel\n          list={datas.children.filter(list => {\n            return list.entity === selectedEntity;\n          })}\n          selectNodeInformation={handleSelectedNodeInformation}\n          closePanel={() => setShowBottomPanel(false)}\n          setActionType={setActionType}\n        />\n      )}\n    </Root>\n  );\n}\n\nexport default Force;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { MenuProps } from './forceDirected';\n\nconst Root = styled.aside`\n  grid-area: leftPanel;\n  background-color: lavender;\n`;\n\nconst LeftPanel = ({ menus }) => {\n  if (!menus) return null;\n  return (\n    <Root>\n      <ul>\n        {menus.map((menu: MenuProps) => (\n          <li key={menu.label}>\n            <Link to={menu.link}>{menu.label}</Link>\n          </li>\n        ))}\n      </ul>\n    </Root>\n  );\n};\n\nLeftPanel.propTypes = {};\n\nexport default LeftPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Root = styled.header`\n  grid-area: header;\n  display: flex;\n  justify-content: space-between;\n  background-color: lightgray;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n`;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n`;\n\nconst Header = () => {\n  return (\n    <Root>\n      <div>logo</div>\n      <List>\n        <ListItem>link1</ListItem>\n        <ListItem>link2</ListItem>\n        <ListItem>link3</ListItem>\n      </List>\n    </Root>\n  );\n};\n\nHeader.propTypes = {};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport Axios from 'axios';\nimport Force from './forceDirected/Force';\nimport LeftPanel from './forceDirected/LeftPanel';\nimport Header from './forceDirected/Header';\n// eslint-disable-next-line import/no-unresolved\nimport { MenuProps } from './forceDirected/forceDirected';\n\nconst Root = styled.main`\n  display: grid;\n  position: relative;\n  height: 100%;\n  grid-template-areas:\n    'header header'\n    'leftPanel content';\n  grid-template-columns: 20rem auto;\n  grid-template-rows: 5rem auto;\n`;\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>HomePage</h1>\n      <p>Un dashboard de ouf</p>\n    </div>\n  );\n};\nconst Content = styled.div`\n  grid-area: content;\n`;\nconst App = () => {\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [menus, setMenus] = useState<MenuProps[] | null>(null);\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const { data } = await Axios({\n          method: 'get',\n          url: `data/config.json`,\n        });\n        setMenus(data.menus);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <Root>\n      {error && <span>{error}</span>}\n      <Header />\n      {isLoading ? (\n        <span>Chargement en cours</span>\n      ) : (\n        <>\n          <LeftPanel menus={menus} />\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/:entity\" component={Force} />\n            </Switch>\n          </Content>\n        </>\n      )}\n    </Root>\n  );\n};\n\nexport default App;\n","const SET_SELECTED_NODE = 'SET_SELECTED_NODE';\n\nconst forceReducer = (state = [], action) => {\n  switch (action.type) {\n    case SET_SELECTED_NODE:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport const setSelectedNodeRedux = () => {\n  return {\n    type: SET_SELECTED_NODE,\n  };\n};\nexport default forceReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport forceReducer from './reducers/forceReducer';\n\nconst store = createStore(forceReducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["forceDirected/ForceDirectedChart.tsx","forceDirected/Templates.tsx","forceDirected/Element.ts","forceDirected/Modal.tsx","forceDirected/config.ts","forceDirected/Action.tsx","forceDirected/RightPanel.tsx","forceDirected/LeftPanel.tsx","forceDirected/Header.tsx","forceDirected/FakeRightPanelTemplate.tsx","forceDirected/Tile/TileItem.tsx","forceDirected/Tile/TileList.tsx","forceDirected/BottomPanel.tsx","forceDirected/Force.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Chart","styled","div","ForceDirectedChart","retreiveSelectedNode","datas","callbackInitChart","chartRef","useRef","seriesRef","menuRef","useState","series","networkConfig","setConfig","error","setError","selectedNode","setSelectedNode","useEffect","a","axios","method","url","data","message","fetchData","am4core","am4themesAnimated","current","ForceDirectedTree","ForceDirectedSeries","push","padding","config","nodes","template","togglable","events","on","event","console","log","isHidden","moveTo","x","y","toBack","show","hide","target","createChild","am4chart","action","weight","menuSeries","dataFields","value","slices","strokeWidth","strokeOpacity","alignLabels","labels","text","bent","radius","fill","ticks","disabled","tooltipText","isMeasured","hidden","values","dispose","id","Bar","color","height","width","marginBottom","Label","label","Button","bgColor","Ul","ul","Li","li","Root","aside","Content","Header","header","Modal","children","close","entity","selectItem","displayedKey","linkId","React","setData","response","type","onClick","map","item","key","guid","name","link","SERVICE_FOLDER","context","Action","displayModal","setDisplayModal","setDisplayedKey","setEntity","handleActions","RightPanel","closePanel","title","LeftPanel","List","ListItem","Row","Column","FakeRightPanelTemplate","Badge","span","Tile","items","groupName","handleClick","length","TileList","lists","groupedLists","setGroupList","reduce","acc","dataContext","Object","keys","index","TileItem","DetailContent","entityItems","handleSelect","entityItem","cloneId","node","main","Navigation","article","section","Force","mainNode","setMainNode","showRightPanel","setShowRightPanel","showBottomPanel","setShowBottomPanel","setDatas","selectedGroupName","selectedEntityItems","setSelectedEntityItems","handleSelectedNode","selectedEntityItemsFiltered","dataItem","res","prevDatas","prevData","tempData","BottomPanel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5df452a7.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4chart from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport {\n  ForceDirectedNode,\n  ForceDirectedTree,\n  ForceDirectedSeries,\n} from '@amcharts/amcharts4/plugins/forceDirected';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\n\nconst Chart = styled.div`\n  height: 30rem;\n`;\n\ninterface Props {\n  retreiveSelectedNode: Function;\n  datas: object[];\n  callbackInitChart: Function;\n}\n\ninterface NetworkConfig {\n  series: object[];\n}\nfunction ForceDirectedChart({\n  retreiveSelectedNode,\n  datas,\n  callbackInitChart,\n}: Props) {\n  const chartRef = useRef<ForceDirectedTree>();\n  const seriesRef = useRef<ForceDirectedSeries>();\n  const menuRef = useRef<am4chart.PieChart>();\n  const [networkConfig, setConfig] = useState<NetworkConfig>({ series: [] });\n  const [error, setError] = useState<string>('');\n  const [selectedNode, setSelectedNode] = useState<ForceDirectedNode | null>(\n    null\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios({\n          method: 'get',\n          url: 'data/data.json',\n        });\n        setConfig(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // useEffect(() => {\n  // const hasParent = (node: ForceDirectedSeriesDataItem) => !!node.parent;\n  // const getParentId = (node?: ForceDirectedSeriesDataItem) =>\n  //   node && node.parent && node.parent.cloneId;\n\n  // const hasSameParent = (\n  //   node1: ForceDirectedSeriesDataItem,\n  //   node2: ForceDirectedSeriesDataItem\n  // ) => getParentId(node1) === getParentId(node2);\n\n  // const removeFollowingChildNode = (\n  //   nodes: ForceDirectedNode[],\n  //   nodeToRemove?: ForceDirectedNode\n  // ) => {\n  //   const existingCrumbIndex = nodes.findIndex(\n  //     node =>\n  //       nodeToRemove &&\n  //       node.dataItem.cloneId === nodeToRemove.dataItem.cloneId\n  //   );\n  //   if (existingCrumbIndex !== -1) {\n  //     return nodes.slice(0, existingCrumbIndex + 1);\n  //   }\n  //   return nodes;\n  // };\n\n  // const nodeWithSameLevel = (\n  //   nodes: ForceDirectedNode[],\n  //   parentId?: string\n  // ) => {\n  //   if (!nodes || !parentId) return null;\n  //   const foundedNode = nodes.find(\n  //     node => getParentId(node.dataItem) === parentId\n  //   );\n  //   if (foundedNode) return foundedNode;\n  //   return null;\n  // };\n\n  // const handleSameLevel = (\n  //   nodes: ForceDirectedNode[],\n  //   actualNode: ForceDirectedNode\n  // ) => {\n  //   /**\n  //     it doesn't work when 2nd generation are click\n  //    */\n  //   const alreadyExists = nodes.some(\n  //     node =>\n  //       actualNode && node.dataItem.cloneId === actualNode.dataItem.cloneId\n  //   );\n  //   if (alreadyExists) return removeFollowingChildNode(nodes, actualNode);\n\n  //   const lastNode: ForceDirectedNode =\n  //     nodes[nodes.length - 1] ||\n  //     (actualNode &&\n  //       nodeWithSameLevel(nodes, getParentId(actualNode.dataItem)));\n\n  //   if (lastNode) {\n  //     let tempNodes = removeFollowingChildNode(nodes, lastNode);\n  //     if (\n  //       actualNode &&\n  //       hasParent(lastNode.dataItem) &&\n  //       hasSameParent(actualNode.dataItem, lastNode.dataItem)\n  //     ) {\n  //       tempNodes = tempNodes.filter(\n  //         prevNode => prevNode.cloneId !== lastNode.cloneId\n  //       );\n  //       return [...tempNodes, actualNode];\n  //     }\n  //   }\n  //   return [...nodes, actualNode];\n  // };\n  // }, [selectedNode]);\n\n  useEffect(() => {\n    am4core.useTheme(am4themesAnimated);\n    chartRef.current = am4core.create('chartdiv', ForceDirectedTree);\n\n    if (networkConfig) {\n      seriesRef.current = new ForceDirectedSeries();\n      if (chartRef.current && seriesRef.current) {\n        chartRef.current.series.push(seriesRef.current);\n        chartRef.current.padding(0, 0, 0, 0);\n        seriesRef.current.config = networkConfig.series;\n        seriesRef.current.nodes.template.togglable = false;\n        // const menu = chartRef.current.createChild(am4chart.PieChart);\n\n        seriesRef.current.nodes.template.events.on('hit', event => {\n          const points: am4core.IPoint = {\n            x: 0,\n            y: 0,\n          };\n          if (menuRef.current) {\n            console.log('click');\n            if (menuRef.current.isHidden) {\n              console.log('should show');\n              menuRef.current.moveTo(points);\n              menuRef.current.toBack();\n              menuRef.current.show(500);\n            } else {\n              menuRef.current.hide(300);\n            }\n          }\n          setSelectedNode(event.target);\n          retreiveSelectedNode(event.target);\n        });\n\n        seriesRef.current.nodes.template.events.on('drag', event => {\n          if (menuRef.current) {\n            menuRef.current.hide(0);\n          }\n        });\n\n        seriesRef.current.nodes.template.events.on('out', event => {\n          // rect.hide();\n        });\n\n        seriesRef.current.events.on('appeared', event => {\n          // eslint-disable-next-line\n          if (!selectedNode) {\n            menuRef.current = event.target.createChild(am4chart.PieChart);\n            // menuRef.current = event.target.nodes.values[0].createChild(\n            //   am4chart.PieChart\n            // );\n            menuRef.current.data = [\n              {\n                action: 'Valorisation',\n                weight: 90,\n              },\n              {\n                action: 'Delete',\n                weight: 90,\n              },\n              {\n                action: 'Enfant',\n                weight: 90,\n              },\n              {\n                action: 'AfterWork',\n                weight: 90,\n              },\n            ];\n            const menuSeries = menuRef.current.series.push(\n              new am4chart.PieSeries()\n            );\n\n            menuSeries.dataFields.value = 'weight';\n            menuSeries.slices.template.strokeWidth = 2;\n            menuSeries.slices.template.strokeOpacity = 1;\n            menuSeries.alignLabels = false;\n            menuSeries.labels.template.text = '{action}';\n            menuSeries.labels.template.bent = true;\n            menuSeries.labels.template.radius = -10;\n            menuSeries.labels.template.padding(0, 0, 0, 0);\n            menuSeries.labels.template.fill = am4core.color('#fff');\n            menuSeries.ticks.template.disabled = true;\n            menuSeries.slices.template.tooltipText = '';\n            menuRef.current.isMeasured = false;\n            menuRef.current.hidden = true;\n          }\n          // console.log(event.target.nodes.values[0]);\n          setSelectedNode(event.target.nodes.values[0]);\n          callbackInitChart(event.target.nodes.values[0]);\n        });\n        seriesRef.current.events.on('childadded', event => {\n          // Set a condition, the problem is when I active a node from outside graph click, give me back the first node\n          setSelectedNode(event.target.nodes.values[0]);\n          callbackInitChart(event.target.nodes.values[0]);\n        });\n      }\n    }\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.dispose();\n      }\n      if (menuRef.current) {\n        menuRef.current.dispose();\n      }\n    };\n  }, [networkConfig]);\n\n  useEffect(() => {\n    if (seriesRef.current) {\n      seriesRef.current.data = datas;\n    }\n  }, [datas]);\n\n  return (\n    <>\n      {error && <span>{error}</span>}\n      <Chart id=\"chartdiv\" />\n    </>\n  );\n}\n\nexport default ForceDirectedChart;\n","import styled from '@emotion/styled';\n\ninterface BarProps {\n  color?: string;\n  height?: number | string;\n  width?: number | string;\n  marginBottom?: number | string;\n}\n\nexport const Bar = styled.div<BarProps>`\n  background-color: ${({ color }) => color || '#fff'};\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => (width ? `${width}rem` : '100%')};\n  margin-bottom: ${({ marginBottom }) =>\n    marginBottom ? `${marginBottom}rem` : '0.5rem'};\n`;\n\nexport const Label = styled.label`\n  margin-right: 0.5rem;\n  display: inline-block;\n  min-width: 9rem;\n  font-size: 1.4rem;\n  margin-bottom: 0.5rem;\n`;\n\n// TODO: Modify any type\ninterface ButtonProps extends BarProps {\n  bgColor?: string;\n  color?: string;\n  type?: string;\n  radius?: number | string;\n  onClick?: any;\n}\n\nexport const Button = styled(Bar)<ButtonProps>`\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => width || 7}rem;\n  background-color: ${({ bgColor }) => bgColor || 'lightgreen'};\n  color: ${({ color }) => color || 'inherit'};\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  border-radius: ${({ radius }) => radius}px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const Li = styled.li`\n  padding: 1rem;\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\nimport { Ul, Li } from './Element';\n\nconst Root = styled.aside`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Content = styled.div`\n  background-color: #fff;\n  min-width: 50%;\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: flex-end;\n`;\n\ninterface Props {\n  close: Function;\n  entity: string;\n  selectItem: Function;\n  displayedKey: string;\n  linkId: number;\n}\nconst Modal: FunctionComponent<Props> = ({\n  children,\n  close,\n  entity,\n  selectItem,\n  displayedKey,\n  linkId,\n}) => {\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: response } = await axios({\n          method: 'get',\n          url: `data/${entity}.json`,\n        });\n        setData(response);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    if (entity) {\n      fetchData();\n    }\n  }, [entity]);\n\n  return (\n    <Root>\n      <Content>\n        <Header>\n          <Button\n            type=\"button\"\n            onClick={() => close()}\n            bgColor=\"red\"\n            color=\"white\"\n            width=\"2\"\n            height={2}\n            radius={200}\n          />\n        </Header>\n        <Ul>\n          {data.map((item: any) => {\n            if (item) {\n              return (\n                <Li\n                  key={item.guid}\n                  onClick={() => {\n                    selectItem({\n                      entity,\n                      name: item[displayedKey],\n                      value: 3000,\n                      link: [linkId],\n                      children: [\n                        {\n                          name: 'Simon',\n                          value: 2500,\n                        },\n                      ],\n                    });\n                    close();\n                  }}\n                >\n                  {item[displayedKey]}\n                </Li>\n              );\n            }\n            return null;\n          })}\n        </Ul>\n        {children}\n      </Content>\n    </Root>\n  );\n};\n\nModal.propTypes = {};\n\nexport default Modal;\n","/* eslint-disable import/prefer-default-export */\nexport const SERVICE_FOLDER = {\n  id: 1123, // This number should be given at loading incoming Service Folder\n  context: 'serviceFolder', // databaseName\n  name: 'Facture',\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport Modal from './Modal';\nimport { Button } from './Templates';\nimport { SERVICE_FOLDER } from './config';\n\nconst Root = styled.div``;\n\ninterface Props {\n  selectItem: Function;\n}\nconst Action = ({ selectItem }: Props) => {\n  const [displayModal, setDisplayModal] = useState<boolean>(false);\n  const [displayedKey, setDisplayedKey] = useState<string>('');\n  const [entity, setEntity] = useState<string>('');\n\n  const handleActions = config => {\n    setDisplayedKey(config.displayedKey);\n    setEntity(config.entity);\n    setDisplayModal(true);\n  };\n\n  return (\n    <Root>\n      <h2>Actions</h2>\n      {displayModal && (\n        <Modal\n          close={() => setDisplayModal(false)}\n          entity={entity}\n          selectItem={selectItem}\n          displayedKey={displayedKey}\n          linkId={SERVICE_FOLDER.id}\n        />\n      )}\n\n      <Button\n        width={20}\n        onClick={() => {\n          handleActions({ displayedKey: 'name', entity: 'clients' });\n        }}\n      >\n        Choisir un client\n      </Button>\n      <Button\n        width={20}\n        onClick={() => {\n          handleActions({ displayedKey: 'name', entity: 'montres' });\n        }}\n      >\n        Choisir une montre\n      </Button>\n    </Root>\n  );\n};\n\nexport default Action;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\n\nconst Root = styled.aside`\n  grid-area: rightPanel;\n  position: absolute;\n  min-width: 40rem;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: white;\n  box-shadow: -4px 0px 4px -3px rgba(219, 219, 219, 1);\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  background-color: lightblue;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n`;\n\n// TODO: Modify any type\ninterface Props {\n  closePanel: any;\n  title?: string;\n}\n\nconst RightPanel: FunctionComponent<Props> = ({\n  children,\n  closePanel,\n  title,\n}) => {\n  return (\n    <Root>\n      <Header>\n        <h1>{title}</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      <Content>{children}</Content>\n    </Root>\n  );\n};\n\nexport default RightPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Root = styled.aside`\n  grid-area: leftPanel;\n  background-color: lavender;\n`;\n\nconst LeftPanel = () => {\n  return <Root>MenuContent</Root>;\n};\n\nLeftPanel.propTypes = {};\n\nexport default LeftPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Root = styled.header`\n  grid-area: header;\n  display: flex;\n  justify-content: space-between;\n  background-color: lightgray;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n`;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n`;\n\nconst Header = () => {\n  return (\n    <Root>\n      <div>logo</div>\n      <List>\n        <ListItem>link1</ListItem>\n        <ListItem>link2</ListItem>\n        <ListItem>link3</ListItem>\n      </List>\n    </Root>\n  );\n};\n\nHeader.propTypes = {};\n\nexport default Header;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Bar, Label, Button } from './Templates';\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n`;\n\nconst FakeRightPanelTemplate = () => {\n  return (\n    <div>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} color=\"gray\" />\n      </Row>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} width={10} color=\"gray\" />\n      </Row>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} color=\"gray\" />\n      </Row>\n      <Row>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={2} width={10} color=\"gray\" />\n      </Row>\n      <Column>\n        <Label>Lorem Ipsum</Label>\n        <Bar height={1.5} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={15} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={20} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={15} color=\"gray\" marginBottom={0.5} />\n        <Bar height={1.5} width={20} color=\"gray\" marginBottom={0.5} />\n      </Column>\n      <Row>\n        <Button />\n        <Button bgColor=\"orange\" />\n      </Row>\n    </div>\n  );\n};\n\nFakeRightPanelTemplate.propTypes = {};\n\nexport default FakeRightPanelTemplate;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { ForceDirectedSeriesDataItem } from '@amcharts/amcharts4/plugins/forceDirected';\n\nconst Root = styled.li`\n  padding: 2rem;\n  margin: 1rem;\n  min-width: 20rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  box-shadow: 0 0 5px 0px rgba(148, 148, 148, 0.5);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    box-shadow: 0 0 10px 0px rgba(148, 148, 148, 0.5);\n  }\n  &:active {\n    box-shadow: 0 0 3px 1px rgba(148, 148, 148, 0.5);\n  }\n`;\n\ninterface CustomForDirectSeriesDataItem extends ForceDirectedSeriesDataItem {\n  dataContext: any;\n}\n\ninterface Props {\n  items?: CustomForDirectSeriesDataItem[] | unknown[];\n  groupName?: string;\n  handleClick: Function;\n}\n\nconst Badge = styled.span`\n  display: inline-block;\n  border-radius: 2px;\n  min-width: 3rem;\n  background-color: #17a2b8;\n  color: white;\n`;\n\nconst Tile: FunctionComponent<Props> = ({ items, groupName, handleClick }) => {\n  if (items)\n    return (\n      <Root onClick={() => handleClick(items, groupName)}>\n        <h3>{groupName}</h3>\n        <Badge>{items.length}</Badge>\n      </Root>\n    );\n  return null;\n};\n\nexport default Tile;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { ForceDirectedSeriesDataItem } from '@amcharts/amcharts4/plugins/forceDirected';\nimport TileItem from './TileItem';\n\nconst Root = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  flex-wrap: wrap;\n`;\n\ninterface Props {\n  lists?: ForceDirectedSeriesDataItem[];\n  handleClick: Function;\n}\nconst TileList: FunctionComponent<Props> = ({ lists, handleClick }) => {\n  const [groupedLists, setGroupList] = useState<object>({});\n\n  useEffect(() => {\n    const groupListItem = (\n      entity: string,\n      arrayItem: ForceDirectedSeriesDataItem[]\n    ) =>\n      arrayItem.reduce((acc, item) => {\n        const key = item.dataContext[entity];\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n        acc[key].push(item);\n        return acc;\n      }, {});\n\n    if (lists) {\n      setGroupList(groupListItem('entity', lists));\n    }\n  }, [lists]);\n\n  if (Object.keys(groupedLists).length === 0)\n    return <span>No item selected</span>;\n  return (\n    <Root>\n      {Object.keys(groupedLists).map((key, index) => {\n        return (\n          <TileItem\n            key={index}\n            items={groupedLists[key]}\n            groupName={key}\n            handleClick={handleClick}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nexport default TileList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { ForceDirectedSeriesDataItem } from '@amcharts/amcharts4/plugins/forceDirected';\nimport { Button } from './Templates';\n\n// TODO: Change Any\ninterface CustomForDirectSeriesDataItem extends ForceDirectedSeriesDataItem {\n  dataContext: {\n    children: any;\n    entity: string;\n    link: number[];\n    name: string;\n    value: number;\n  };\n}\n\ninterface Props {\n  item: {\n    entityItems: CustomForDirectSeriesDataItem[];\n    selectedGroupName: string;\n  };\n  handleSelect: Function;\n  closePanel: any;\n}\n\nconst Root = styled.div`\n  flex: 1;\n  min-width: 100%;\n  grid-area: bottomPanel;\n  box-shadow: 0px -2px 5px -1px rgba(153, 153, 153, 1);\n`;\nconst List = styled.ul``;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n  min-width: 20rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    background-color: #e4e4e4;\n  }\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: lightblue;\n  padding: 1rem;\n`;\nconst Content = styled.div``;\n\nconst DetailContent: FunctionComponent<Props> = ({\n  item: { entityItems },\n  handleSelect,\n  closePanel,\n}) => {\n  return (\n    <Root>\n      <Header>\n        <h1>Détail</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      <Content>\n        <List>\n          {entityItems.map(entityItem => {\n            if (Object.keys(entityItem).length === 0) return null;\n            return (\n              <ListItem\n                key={entityItem.cloneId}\n                onClick={() => handleSelect(entityItem.node)}\n              >\n                {entityItem.name}\n              </ListItem>\n            );\n          })}\n        </List>\n      </Content>\n    </Root>\n  );\n};\n\nexport default DetailContent;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport {\n  ForceDirectedNode,\n  ForceDirectedSeriesDataItem,\n} from '@amcharts/amcharts4/plugins/forceDirected';\nimport ForceDirectedChart from './ForceDirectedChart';\nimport Action from './Action';\nimport RightPanel from './RightPanel';\nimport LeftPanel from './LeftPanel';\nimport Header from './Header';\nimport FakeRightPanelTemplate from './FakeRightPanelTemplate';\nimport { SERVICE_FOLDER } from './config';\nimport TileList from './Tile/TileList';\nimport BottomPanel from './BottomPanel';\n\nconst Root = styled.main`\n  display: grid;\n  position: relative;\n  height: 100%;\n  grid-template-areas:\n    'header header rightPanel'\n    'leftPanel content rightPanel'\n    'leftPanel bottomPanel rightPanel';\n  grid-template-columns: 20rem 1fr auto;\n  grid-template-rows: 5rem auto 1fr;\n`;\nconst Navigation = styled.article`\n  grid-area: navigation;\n  flex: 1;\n`;\n\nconst Content = styled.div`\n  grid-area: content;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Row = styled.section`\n  display: flex;\n  margin-top: 2rem;\n`;\n\nfunction Force() {\n  interface SelectedEntityItemsProps {\n    entityItems: CustomForceDirectSeriesDataItem[];\n    selectedGroupName: string;\n  }\n\n  interface Datas {\n    name: string;\n    value: number;\n    link: number;\n    entity: string;\n    children: Datas[];\n  }\n\n  interface CustomForceDirectSeriesDataItem\n    extends ForceDirectedSeriesDataItem {\n    dataContext: any;\n  }\n  const [selectedNode, setSelectedNode] = useState<ForceDirectedNode | null>(\n    null\n  );\n  const [mainNode, setMainNode] = useState<ForceDirectedNode | null>(null);\n  const [showRightPanel, setShowRightPanel] = useState<boolean>(false);\n  const [showBottomPanel, setShowBottomPanel] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [datas, setDatas] = useState<Datas[]>([]);\n  const [selectedEntityItems, setSelectedEntityItems] = useState<\n    SelectedEntityItemsProps\n  >({\n    entityItems: [],\n    selectedGroupName: '',\n  });\n\n  const handleClick = (\n    entityItems: CustomForceDirectSeriesDataItem[],\n    selectedGroupName: string\n  ) => {\n    setSelectedEntityItems({ entityItems, selectedGroupName });\n    setShowBottomPanel(true);\n  };\n\n  const handleSelectedNode = (response: ForceDirectedNode) => {\n    setSelectedNode(response);\n    setShowRightPanel(true);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios({\n          method: 'get',\n          url: `data/${SERVICE_FOLDER.context}.json`,\n        });\n        setDatas(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (showBottomPanel && mainNode) {\n      const selectedEntityItemsFiltered = mainNode.dataItem.children.values.map(\n        item => {\n          return Object.values(item.dataContext).reduce((res, value) => {\n            if (value === selectedEntityItems.selectedGroupName) {\n              return item;\n            }\n            return res;\n          }, {});\n        }\n      );\n      setSelectedEntityItems({\n        ...selectedEntityItems,\n        entityItems: selectedEntityItemsFiltered,\n      });\n    }\n  }, [mainNode, showBottomPanel]);\n\n  return (\n    <Root>\n      {error && <span>{error}</span>}\n      <Header />\n      <LeftPanel />\n      <Content>\n        <h1>{SERVICE_FOLDER.name}</h1>\n        <Row>\n          <Action\n            selectItem={(item: Datas) => {\n              setDatas(prevDatas => {\n                const tempDatas = prevDatas.map(prevData => {\n                  const tempData: Datas = {\n                    ...prevData,\n                    children: [...prevData.children],\n                  };\n                  tempData.children = [...tempData.children, item];\n                  return tempData;\n                });\n                return tempDatas;\n              });\n            }}\n          />\n          <Navigation>\n            <ForceDirectedChart\n              retreiveSelectedNode={handleSelectedNode}\n              callbackInitChart={(response: ForceDirectedNode) =>\n                setMainNode(response)\n              }\n              datas={datas}\n            />\n          </Navigation>\n        </Row>\n        <Column>\n          <h2>Sélection détail</h2>\n          {mainNode && mainNode.dataItem.children.length > 0 ? (\n            <TileList\n              lists={mainNode.dataItem.children.values}\n              handleClick={handleClick}\n            />\n          ) : (\n            <span>Aucune sélection</span>\n          )}\n        </Column>\n      </Content>\n      {showRightPanel && (\n        <RightPanel\n          closePanel={() => setShowRightPanel(false)}\n          title={selectedNode ? selectedNode.dataItem.name : 'Détail'}\n        >\n          <FakeRightPanelTemplate />\n        </RightPanel>\n      )}\n      {showBottomPanel && (\n        <BottomPanel\n          item={selectedEntityItems}\n          handleSelect={handleSelectedNode}\n          closePanel={() => setShowBottomPanel(false)}\n        />\n      )}\n    </Root>\n  );\n}\n\nexport default Force;\n","import React from 'react';\nimport Force from './forceDirected/Force';\n\nconst App = () => {\n  return <Force />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
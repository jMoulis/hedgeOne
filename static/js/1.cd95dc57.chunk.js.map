{"version":3,"sources":["assets/icons/list.svg","assets/icons/network.svg","assets/icons/valorisation.svg","components/Force/ForceDirectedChart.tsx","components/Force/Templates.tsx","components/Force/Modal.tsx","components/Force/Element.ts","components/Tree/TreeNavigation.tsx","components/Tree/TreePanel.tsx","components/Force/Action.tsx","assets/icons/backIcon.svg","components/Force/RightPanel.tsx","components/Force/Tile/TileItem.tsx","components/Force/Tile/TileList.tsx","components/Force/BottomPanel.tsx","components/Force/FormBuilder.tsx","components/Force/Force.tsx","components/DynamicComponent/Document.tsx"],"names":["module","exports","Chart","styled","div","menuRefData","containerHeight","actionType","weight","image","ValorisationIcon","x","y","ListIcon","iconSize","NetworkIcon","ForceDirectedChart","retreiveSelectedNodeInformation","data","seriesConfig","setActionType","seriesRef","useRef","selectedNodeRef","selectedMenu","buildMenu","container","height","bbox","points","menuRef","createChild","am4chart","isMeasured","width","moveTo","toBack","menuSeries","series","push","dataFields","value","hiddenState","properties","endAngle","defaultState","transitionDuration","ticks","template","disabled","slices","togglable","strokeWidth","strokeOpacity","tooltipText","labels","text","icon","am4core","propertyFields","href","hoverable","events","on","target","menu","dataItem","component","chart","dataContext","activeNode","current","isActive","hide","setTimeout","dispose","useEffect","am4themesAnimated","timer","ForceDirectedTree","padding","ForceDirectedSeries","config","nodes","children","values","find","child","existingMenu","newMenu","clearTimeout","dataToArray","Array","isArray","id","Bar","color","marginBottom","Button","label","bgColor","radius","Root","aside","Content","Header","header","Modal","close","type","onClick","Ul","ul","Li","li","Category","h2","TreeNavigation","items","setSelectedCategory","selectItem","entity","displayedKey","linkId","selectedCategory","useState","treeNavigation","setTreeNavigation","collapse","setCollapse","reduce","acc","item","key","category","Object","keys","map","subItems","prevCollapse","subItem","guid","name","link","TreePanel","Action","context","displayModal","setDisplayModal","setDisplayedKey","setEntity","setData","a","axios","method","url","response","console","error","message","fetchData","actions","length","action","index","handleActions","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","ReturnButton","ReturnIcon","SubHeader","RightPanel","closePanel","selectNode","prevSelectedNode","tabIndex","isSelected","Badge","span","Tile","itemsLength","handleClick","entityName","selectedEntity","TileList","lists","groupedLists","setGroupList","arrayItem","TileItem","List","ListItem","Buttons","Informations","BottomPanel","list","selectNodeInformation","log","HOST","entityItem","fakeItem","tab","tabId","setTabsAction","setActiveTabAction","root","searchQuery","parent_id","Label","ValorisationLink","FormBuilder","object","entries","entry","idx","main","Navigation","article","Column","Row","section","Force","selectedNode","setSelectedNode","showRightPanel","setShowRightPanel","showBottomPanel","setShowBottomPanel","setError","setSelectedEntity","isLoading","setIsLoading","setContext","setSeries","handleSelectedNodeInformation","handleSelectedSubItem","filteredData","prevDatas","valorisations","filter","Document","rest"],"mappings":"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","file":"static/js/1.cd95dc57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/list.b39fb484.svg\";","module.exports = __webpack_public_path__ + \"static/media/network.c2163f38.svg\";","module.exports = __webpack_public_path__ + \"static/media/valorisation.ec937b18.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useRef } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport * as am4chart from '@amcharts/amcharts4/charts';\nimport {\n  ForceDirectedTree,\n  ForceDirectedSeries,\n  ForceDirectedNode,\n} from '@amcharts/amcharts4/plugins/forceDirected';\nimport styled from '@emotion/styled';\nimport ListIcon from '../../assets/icons/list.svg';\nimport NetworkIcon from '../../assets/icons/network.svg';\nimport ValorisationIcon from '../../assets/icons/valorisation.svg';\n\nconst Chart = styled.div`\n  height: 30rem;\n`;\n\ninterface Props {\n  retreiveSelectedNodeInformation: Function;\n  setActionType: Function;\n  data: any;\n  seriesConfig: any[];\n}\nconst menuRefData = (containerHeight: number) => {\n  const iconSize = 30;\n  const iconSizeMiddle = iconSize / 2;\n\n  return [\n    {\n      actionType: 'valorisation',\n      weight: 90,\n      image: ValorisationIcon,\n      x: containerHeight / 2,\n      y: -containerHeight / 2,\n    },\n    {\n      actionType: 'show_children',\n      weight: 90,\n      image: ListIcon,\n      x: -iconSizeMiddle,\n      y: containerHeight / 2,\n    },\n    {\n      actionType: 'network',\n      weight: 90,\n      image: NetworkIcon,\n      x: -containerHeight / 2 - iconSize,\n      y: -containerHeight / 2,\n    },\n  ];\n};\n\nfunction ForceDirectedChart({\n  retreiveSelectedNodeInformation,\n  data,\n  seriesConfig,\n  setActionType,\n}: Props) {\n  const seriesRef = useRef<ForceDirectedSeries | null>(null);\n  const selectedNodeRef = useRef<ForceDirectedNode | null>(null);\n  const selectedMenu = useRef<any>(null);\n\n  const buildMenu = container => {\n    const { height } = container.bbox;\n    const points: am4core.IPoint = {\n      x: -(height + height + 45) / 2,\n      y: -(height + height + 45) / 2,\n    };\n    /**\n     * Menu Configuration\n     */\n    const menuRef = container.createChild(am4chart.PieChart);\n    menuRef.isMeasured = false;\n    menuRef.width = height + height + 45;\n    menuRef.height = height + height + 45;\n    menuRef.moveTo(points);\n    menuRef.isMeasured = false;\n    menuRef.toBack();\n    menuRef.data = menuRefData(height);\n\n    /**\n     * MenuSeries (PieSeries)\n     */\n    const menuSeries = menuRef.series.push(new am4chart.PieSeries());\n    menuSeries.dataFields.value = 'weight';\n    menuSeries.hiddenState.properties.endAngle = -90;\n    menuSeries.defaultState.transitionDuration = 300;\n    menuSeries.ticks.template.disabled = true;\n    menuSeries.slices.template.togglable = false;\n    menuSeries.slices.template.strokeWidth = 2;\n    menuSeries.slices.template.strokeOpacity = 1;\n    menuSeries.slices.template.tooltipText = '';\n    menuSeries.labels.template.text = '';\n\n    /**\n     * Add icons\n     */\n    const icon: am4core.Image = menuSeries.slices.template.createChild(\n      am4core.Image\n    );\n    icon.isMeasured = false;\n    icon.propertyFields.href = 'image';\n    icon.width = 30;\n    icon.height = 30;\n    icon.propertyFields.x = 'x';\n    icon.propertyFields.y = 'y';\n    icon.hoverable = false;\n\n    /**\n     * Events Callback\n     */\n    menuSeries.slices.template.events.on('hit', ({ target }) => {\n      const menu: am4chart.PieChart = target.dataItem.component.chart;\n      const { actionType } = target.dataItem.dataContext;\n      if (actionType === 'show_children') {\n        const activeNode = selectedNodeRef.current;\n        if (activeNode) {\n          activeNode.isActive = !activeNode.isActive;\n        }\n      }\n\n      setActionType(actionType);\n      menu.hide(150);\n      setTimeout(() => {\n        menu.dispose();\n      }, 170);\n    });\n    return menuRef;\n  };\n\n  useEffect(() => {\n    am4core.useTheme(am4themesAnimated);\n    const chart = am4core.create('chartdiv', ForceDirectedTree);\n    chart.padding(0, 0, 0, 0);\n    let timer;\n\n    if (chart) {\n      /**\n       * ChartSeries Configuration\n       */\n      seriesRef.current = new ForceDirectedSeries();\n      chart.series.push(seriesRef.current);\n      seriesRef.current.config = seriesConfig;\n      seriesRef.current.nodes.template.togglable = false;\n      /**\n       * ChartSeries Events\n       */\n      seriesRef.current.nodes.template.events.on('hit', ({ target }) => {\n        const menu = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (!menu) {\n          buildMenu(target);\n        }\n        setActionType();\n        selectedNodeRef.current = target;\n        retreiveSelectedNodeInformation(target.dataItem.dataContext);\n      });\n\n      seriesRef.current.nodes.template.events.on('over', ({ target }) => {\n        // Check if existingMenu\n        const existingMenu = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (!existingMenu && selectedMenu.current) {\n          selectedMenu.current.dispose();\n        }\n        timer = setTimeout(() => {\n          if (!existingMenu) {\n            const newMenu = buildMenu(target);\n            selectedMenu.current = newMenu;\n          }\n          selectedNodeRef.current = target;\n        }, 150);\n      });\n\n      seriesRef.current.nodes.template.events.on('out', () =>\n        clearTimeout(timer)\n      );\n      seriesRef.current.nodes.template.events.on('doublehit', ({ target }) => {\n        const menu = target.children.values.find(\n          child => child instanceof am4chart.PieChart\n        );\n        if (menu) {\n          menu.dispose();\n        }\n      });\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose();\n      }\n      clearTimeout(timer);\n    };\n  }, [seriesConfig]);\n\n  useEffect(() => {\n    if (seriesRef.current && data) {\n      let dataToArray = data;\n      if (!Array.isArray(dataToArray)) {\n        dataToArray = [dataToArray];\n      }\n      seriesRef.current.data = dataToArray;\n    }\n  }, [data]);\n\n  return <Chart id=\"chartdiv\" />;\n}\n\nexport default ForceDirectedChart;\n","import styled from '@emotion/styled';\n\ninterface BarProps {\n  color?: string;\n  height?: number | string;\n  width?: number | string;\n  marginBottom?: number | string;\n}\n\nexport const Bar = styled.div<BarProps>`\n  background-color: ${({ color }) => color || '#fff'};\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => (width ? `${width}rem` : '100%')};\n  margin-bottom: ${({ marginBottom }) =>\n    marginBottom ? `${marginBottom}rem` : '0.5rem'};\n`;\n\nexport const Label = styled.label`\n  margin-right: 0.5rem;\n  display: inline-block;\n  min-width: 9rem;\n  font-size: 1.4rem;\n  margin-bottom: 0.5rem;\n`;\n\n// TODO: Modify any type\ninterface ButtonProps extends BarProps {\n  bgColor?: string;\n  color?: string;\n  type?: string;\n  radius?: number | string;\n  onClick?: any;\n}\n\nexport const Button = styled(Bar)<ButtonProps>`\n  height: ${({ height }) => height || 3}rem;\n  width: ${({ width }) => width || 7}rem;\n  background-color: ${({ bgColor }) => bgColor || 'lightgreen'};\n  color: ${({ color }) => color || 'inherit'};\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  border-radius: ${({ radius }) => radius}px;\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\n\nconst Root = styled.aside`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Content = styled.div`\n  background-color: #fff;\n  min-width: 80%;\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: flex-end;\n`;\n\ninterface Props {\n  close: Function;\n}\n\nconst Modal: FunctionComponent<Props> = ({ children, close }) => {\n  return (\n    <Root>\n      <Content>\n        <Header>\n          <Button\n            type=\"button\"\n            onClick={() => close()}\n            bgColor=\"red\"\n            color=\"white\"\n            width=\"2\"\n            height={2}\n            radius={200}\n          />\n        </Header>\n        {children}\n      </Content>\n    </Root>\n  );\n};\n\nModal.propTypes = {};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const Li = styled.li`\n  padding: 1rem;\n`;\n","import React, { useEffect, useState, FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Li } from '../Force/Element';\n\nconst Category = styled.h2``;\n\ninterface Props {\n  items: any[];\n  setSelectedCategory: Function;\n  selectItem: Function;\n  entity: string;\n  displayedKey: string;\n  linkId: number;\n  selectedCategory: string;\n  close: Function;\n}\nconst TreeNavigation: FunctionComponent<Props> = ({\n  items,\n  setSelectedCategory,\n  selectItem,\n  entity,\n  displayedKey,\n  linkId,\n  close,\n  selectedCategory,\n}) => {\n  const [treeNavigation, setTreeNavigation] = useState([]);\n  const [collapse, setCollapse] = useState(false);\n\n  const transformItems = listItems => {\n    return listItems.reduce((acc, item) => {\n      const key = item.category;\n      if (!acc[key]) {\n        acc[key] = [];\n      }\n      acc[key].push(item);\n      return acc;\n    }, []);\n  };\n\n  useEffect(() => {\n    setTreeNavigation(transformItems(items));\n  }, [items]);\n\n  return (\n    <div>\n      {Object.keys(treeNavigation).map((key: string) => {\n        const subItems: any[] = treeNavigation[key];\n        return (\n          <div key={key}>\n            <Category\n              onClick={() => {\n                setSelectedCategory(key);\n                setCollapse(prevCollapse => !prevCollapse);\n              }}\n            >\n              {key}\n            </Category>\n            {collapse && key === selectedCategory && (\n              <ul>\n                {subItems &&\n                  subItems.map(subItem => (\n                    <Li\n                      key={subItem.guid}\n                      onClick={() => {\n                        selectItem({\n                          entity,\n                          name: subItem[displayedKey],\n                          value: 3000,\n                          link: [linkId],\n                          ...subItem,\n                        });\n                        close();\n                      }}\n                    >\n                      {subItem.name}\n                    </Li>\n                  ))}\n              </ul>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TreeNavigation;\n","import React, { FunctionComponent, useState } from 'react';\nimport styled from '@emotion/styled';\nimport TreeNavigation from './TreeNavigation';\nimport { Ul, Li } from '../Force/Element';\n\ninterface Props {\n  close: Function;\n  entity: string;\n  selectItem: Function;\n  displayedKey: string;\n  linkId: number;\n  items: any[];\n}\n\nconst Root = styled.div`\n  display: flex;\n`;\n\nconst TreePanel: FunctionComponent<Props> = ({\n  items,\n  selectItem,\n  close,\n  linkId,\n  displayedKey,\n  entity,\n}) => {\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  return (\n    <Root>\n      <TreeNavigation\n        items={items}\n        setSelectedCategory={setSelectedCategory}\n        selectItem={selectItem}\n        linkId={linkId}\n        close={close}\n        entity={entity}\n        displayedKey={displayedKey}\n        selectedCategory={selectedCategory}\n      />\n      <Ul>\n        {items.map((item: any) => {\n          if (item && item.category === selectedCategory) {\n            return (\n              <Li\n                key={item.guid}\n                onClick={() => {\n                  selectItem({\n                    entity,\n                    name: item[displayedKey],\n                    value: 3000,\n                    link: [linkId],\n                    ...item,\n                  });\n                  close();\n                }}\n              >\n                {item[displayedKey]}\n              </Li>\n            );\n          }\n          return null;\n        })}\n      </Ul>\n    </Root>\n  );\n};\n\nexport default TreePanel;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport Modal from './Modal';\nimport { Button } from './Templates';\n// eslint-disable-next-line import/no-unresolved\nimport { ConfigState } from './forceDirected';\nimport { TreePanel } from '../Tree';\n\nconst Root = styled.div``;\n\ninterface Props {\n  selectItem: Function;\n  config: ConfigState;\n}\nconst Action = ({ selectItem, config: { context } }: Props) => {\n  const [displayModal, setDisplayModal] = useState<boolean>(false);\n  const [displayedKey, setDisplayedKey] = useState<string>('');\n  const [entity, setEntity] = useState<string>('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: response } = await axios({\n          method: 'get',\n          url: `data/${entity}.json`,\n        });\n        setData(response);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    if (entity) {\n      fetchData();\n    }\n  }, [entity]);\n  const handleActions = action => {\n    setDisplayedKey(action.displayedKey);\n    setEntity(action.entity);\n    setDisplayModal(true);\n  };\n\n  if (!context) return null;\n  const { actions, id } = context;\n  if (actions.length === 0) return null;\n  return (\n    <Root>\n      <h2>Actions</h2>\n      {displayModal && (\n        <Modal close={() => setDisplayModal(false)}>\n          <label>Search</label>\n          <input type=\"text\" />\n          <TreePanel\n            items={data}\n            close={() => setDisplayModal(false)}\n            selectItem={selectItem}\n            displayedKey={displayedKey}\n            linkId={id}\n            entity={entity}\n          />\n        </Modal>\n      )}\n\n      {actions &&\n        actions.map((action, index) => (\n          <Button\n            key={index}\n            width={20}\n            onClick={() => {\n              handleActions(action);\n            }}\n          >\n            {action.label}\n          </Button>\n        ))}\n\n      {/* <Button\n        width={20}\n        onClick={() => {\n          handleActions({ displayedKey: 'name', entity: 'montres' });\n        }}\n      >\n        Choisir une montre\n      </Button> */}\n    </Root>\n  );\n};\n\nexport default Action;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z\"\n});\n\nvar SvgBackIcon = function SvgBackIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"chevron-circle-left\",\n    className: \"svg-inline--fa fa-chevron-circle-left fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBackIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/backIcon.9ff83b3f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\nimport { ReactComponent as ReturnIcon } from '../../assets/icons/backIcon.svg';\n\nconst Root = styled.aside`\n  grid-area: rightPanel;\n  min-width: 40rem;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: white;\n  box-shadow: -4px 0px 4px -3px rgba(219, 219, 219, 1);\n`;\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: lightblue;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n`;\n\nconst ReturnButton = styled(ReturnIcon)`\n  display: block;\n  margin: 0.5rem;\n  cursor: pointer;\n`;\n\nconst SubHeader = styled.div`\n  background-color: lightGray;\n  display: flex;\n  align-items: center;\n`;\n\n// TODO: Modify any type\ninterface Props {\n  closePanel: any;\n  title?: string;\n  prevSelectedNode: any;\n  selectNode: Function;\n}\n\nconst RightPanel: FunctionComponent<Props> = ({\n  children,\n  closePanel,\n  title,\n  selectNode,\n  prevSelectedNode,\n}) => {\n  return (\n    <Root>\n      <Header>\n        <h1>{title}</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      {prevSelectedNode.current && (\n        <SubHeader>\n          <ReturnButton\n            height=\"20\"\n            width=\"20\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              selectNode(prevSelectedNode.current);\n            }}\n          />\n        </SubHeader>\n      )}\n      <Content>{children}</Content>\n    </Root>\n  );\n};\n\nexport default RightPanel;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface RootProps {\n  isSelected: boolean;\n}\nconst Root = styled.li<RootProps>`\n  padding: 2rem;\n  margin: 1rem;\n  min-width: 20rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  background-color: ${({ isSelected }) => (isSelected ? 'lightBlue' : '#fff')};\n  box-shadow: 0 0 5px 0px rgba(148, 148, 148, 0.5);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:hover {\n    box-shadow: 0 0 10px 0px rgba(148, 148, 148, 0.5);\n  }\n  &:active {\n    box-shadow: 0 0 3px 1px rgba(148, 148, 148, 0.5);\n  }\n`;\n\ninterface Datas {\n  name: string;\n  value: number;\n  link: number;\n  entity: string;\n  children: Datas[];\n  navigation: any;\n}\n\ninterface Props {\n  itemsLength: number;\n  handleClick: Function;\n  entityName: string;\n  selectedEntity?: string;\n}\n\nconst Badge = styled.span`\n  display: inline-block;\n  border-radius: 2px;\n  min-width: 3rem;\n  background-color: #17a2b8;\n  color: white;\n`;\n\nconst Tile: FunctionComponent<Props> = ({\n  itemsLength,\n  handleClick,\n  entityName,\n  selectedEntity,\n}) => {\n  if (itemsLength)\n    return (\n      <Root\n        isSelected={selectedEntity === entityName}\n        onClick={() => {\n          handleClick(entityName);\n        }}\n      >\n        <h3>{entityName}</h3>\n        <Badge>{itemsLength}</Badge>\n      </Root>\n    );\n  return null;\n};\n\nexport default Tile;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport TileItem from './TileItem';\n\nconst Root = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  flex-wrap: wrap;\n`;\ninterface Datas {\n  name: string;\n  value: number;\n  link: number;\n  entity: string;\n  children: Datas[];\n}\ninterface Props {\n  lists: Datas[];\n  handleClick: Function;\n  selectedEntity?: string;\n}\nconst TileList: FunctionComponent<Props> = ({\n  lists,\n  handleClick,\n  selectedEntity,\n}) => {\n  const [groupedLists, setGroupList] = useState<object>({});\n  useEffect(() => {\n    const groupListItem = (entity: string, arrayItem: Datas[]) =>\n      arrayItem\n        ? arrayItem.reduce((acc, item) => {\n            const key = item[entity];\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(item);\n            return acc;\n          }, {})\n        : {};\n\n    setGroupList(groupListItem('entity', lists));\n  }, [lists]);\n\n  if (Object.keys(groupedLists).length === 0)\n    return <span>Aucune sélection</span>;\n  return (\n    <Root>\n      {Object.keys(groupedLists).map((key, index) => {\n        return (\n          <TileItem\n            key={index}\n            itemsLength={groupedLists[key].length}\n            entityName={key}\n            handleClick={handleClick}\n            selectedEntity={selectedEntity}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nexport default TileList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Button } from './Templates';\n\nconst Root = styled.div`\n  flex: 1;\n  min-width: 100%;\n  grid-area: bottomPanel;\n  box-shadow: 0px -2px 5px -1px rgba(153, 153, 153, 1);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n  text-align: center;\n  text-transform: capitalize;\n  transition: all 150ms;\n  // cursor: pointer;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  justify-content: space-between;\n  &:hover {\n    background-color: #e4e4e4;\n  }\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: lightblue;\n  padding: 1rem;\n`;\nconst Content = styled.div``;\nconst Buttons = styled.div`\n  display: flex;\n`;\n\nconst Informations = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: flex-start;\n`;\n\n// TODO: Change Any\ninterface Props {\n  list: any[] | null;\n  selectNodeInformation: Function;\n  setActionType: Function;\n  closePanel: any;\n  entity: string;\n  actionType: string;\n  actions: any;\n}\n\nconst BottomPanel: FunctionComponent<Props> = ({\n  list,\n  selectNodeInformation,\n  closePanel,\n  setActionType,\n  entity,\n  actionType,\n  actions,\n}) => {\n  console.log(actions);\n  const HOST = 'https://jmoulis.github.io/hedgeOne';\n  // const HOST = 'http://localhost:3000';\n  return (\n    <Root>\n      <Header>\n        <h1>Détail</h1>\n        <Button\n          type=\"button\"\n          onClick={closePanel}\n          bgColor=\"red\"\n          color=\"white\"\n          width=\"2\"\n          height={2}\n          radius=\"200\"\n        />\n      </Header>\n      <Content>\n        {list && (\n          <ul>\n            {list.map(entityItem => {\n              if (Object.keys(entityItem).length === 0) return null;\n              return (\n                <ListItem key={entityItem.id}>\n                  <Informations\n                    onClick={() => {\n                      // setActionType(null);\n                      // selectNodeInformation(entityItem);\n                      const fakeItem = {\n                        entity: 'serviceFolder',\n                        label: 'ServiceFolder',\n                        tab: true,\n                        tabId: '968fab40-d95b-11sdffe9-8707-8757dcaa404e',\n                        type: 'Document',\n                      };\n                      actions.setTabsAction(fakeItem);\n                      actions.setActiveTabAction(fakeItem);\n                      const root = `${HOST}/${entity}`;\n                      const searchQuery = entityItem.parent_id\n                        ? `?id=${entityItem.parent_id}`\n                        : '';\n                      const url = `${root}${searchQuery}`;\n                    }}\n                  >\n                    <List>\n                      {Object.keys(entityItem).map(key => {\n                        if (typeof entityItem[key] !== 'string') return null;\n                        return <ListItem key={key}>{entityItem[key]}</ListItem>;\n                      })}\n                    </List>\n                  </Informations>\n                  <Buttons>\n                    <Button\n                      type=\"button\"\n                      bgColor=\"green\"\n                      color=\"white\"\n                      width={2}\n                      height={2}\n                      radius={2}\n                      onClick={() => {\n                        const root = `${HOST}/${entity}`;\n                        const searchQuery = entityItem.parent_id\n                          ? `?id=${entityItem.parent_id}`\n                          : '';\n                        const url = `${root}${searchQuery}`;\n                      }}\n                    />\n                    <Button\n                      type=\"button\"\n                      bgColor=\"red\"\n                      color=\"white\"\n                      width={2}\n                      height={2}\n                      radius={2}\n                    />\n                  </Buttons>\n                </ListItem>\n              );\n            })}\n          </ul>\n        )}\n      </Content>\n    </Root>\n  );\n};\n\nexport default BottomPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\ninterface Props {\n  item: any;\n  selectNode: Function;\n  setActionType: Function;\n  prevSelectedNode: {\n    current: any;\n  };\n}\n\nconst Label = styled.label`\n  display: inline-block;\n  margin-right: 1rem;\n  font-weight: bold;\n`;\n\nconst ListItem = styled.li`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ValorisationLink = styled.span`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst FormBuilder: React.FC<Props> = ({ item, selectNode, setActionType }) => {\n  const renderForm = (object: any) => {\n    return Object.entries(object).map((entry, index) => {\n      const label: string = entry[0];\n      const value: any = entry[1];\n      if (!value) return null;\n      return (\n        <div key={index}>\n          <Label>{`${label}:`}</Label>\n          {label === 'children' && (\n            <ul>\n              {value.map((child, idx) => (\n                <ListItem key={idx} onClick={() => selectNode(child)}>\n                  {child.name}\n                </ListItem>\n              ))}\n            </ul>\n          )}\n          {label === 'valorisations' && (\n            <>\n              {value.length > 0 ? (\n                <ValorisationLink onClick={() => setActionType('valorisation')}>\n                  Consulter\n                </ValorisationLink>\n              ) : null}\n            </>\n          )}\n          {typeof value === 'string' || typeof value === 'number' ? (\n            <span>{value}</span>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  return (\n    <div>\n      <div>{renderForm(item)}</div>\n    </div>\n  );\n};\n\nexport default FormBuilder;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport ForceDirectedChart from './ForceDirectedChart';\nimport Action from './Action';\nimport RightPanel from './RightPanel';\nimport TileList from './Tile/TileList';\nimport BottomPanel from './BottomPanel';\nimport FormBuilder from './FormBuilder';\n\nconst Root = styled.main`\n  display: grid;\n  position: relative;\n  height: 100%;\n  grid-area: content;\n  grid-template-areas:\n    'header rightPanel'\n    'content rightPanel'\n    'bottomPanel rightPanel';\n  grid-template-columns: 1fr auto;\n  grid-template-rows: 5rem auto 1fr;\n`;\nconst Navigation = styled.article`\n  flex: 1;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Row = styled.section`\n  display: flex;\n  margin-top: 2rem;\n`;\n\nconst Header = styled.header`\n  grid-area: header;\n`;\n\nconst Content = styled.div`\n  grid-area: content;\n`;\n\ninterface Props {\n  config: any;\n  actions: any;\n}\n\nfunction Force<Props>({ config, actions }) {\n  interface Datas {\n    name: string;\n    value: number;\n    link: number;\n    entity: string;\n    children: Datas[];\n    id: string;\n    navigation: any;\n    valorisations: any;\n  }\n\n  const prevSelectedNode = useRef<Datas | null>(null);\n  const [selectedNode, setSelectedNode] = useState<Datas | null>(null);\n  const [actionType, setActionType] = useState<string>('');\n  const [showRightPanel, setShowRightPanel] = useState<boolean>(false);\n  const [showBottomPanel, setShowBottomPanel] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [data, setData] = useState<any>(null);\n  const [selectedEntity, setSelectedEntity] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [context, setContext] = useState<any | null>(null);\n  const [series, setSeries] = useState<any[]>([]);\n\n  const handleClick = (entityName: string) => {\n    setSelectedEntity(entityName);\n    setShowBottomPanel(true);\n  };\n\n  const handleSelectedNodeInformation = (response: Datas) => {\n    prevSelectedNode.current = null;\n    setSelectedNode(response);\n    setShowRightPanel(true);\n  };\n\n  const handleSelectedSubItem = (response: Datas) => {\n    if (!prevSelectedNode.current) {\n      prevSelectedNode.current = selectedNode;\n    } else {\n      prevSelectedNode.current = null;\n    }\n    setSelectedNode(response);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const response = await axios({\n          method: 'get',\n          url: `/data/${config.entity}Config.json`,\n        });\n        setSeries(response.data.series);\n        setContext(response.data.context);\n        setIsLoading(false);\n        setError('');\n      } catch (err) {\n        setIsLoading(false);\n        setContext(null);\n        setSeries([]);\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios({\n          method: 'get',\n          url: `/data/${config.entity}.json`,\n        });\n        /**\n         * Fake step. Normally I would call api a receceived an object and not an array\n         */\n        let filteredData = response.data;\n        // if (id) {\n        //   if (Array.isArray(response.data)) {\n        //     filteredData = response.data.find(item => item.id === id);\n        //   } else {\n        //     filteredData = response.data;\n        //   }\n        // }\n        /* ***** */\n        setData(filteredData);\n        setSelectedNode(filteredData);\n        setError('');\n      } catch (err) {\n        setData(null);\n        setError(err.message);\n      }\n    };\n    if (context && Object.keys(context).length !== 0) {\n      fetchData();\n    }\n  }, [context]);\n\n  useEffect(() => {\n    setShowBottomPanel(false);\n  }, [actionType]);\n\n  if (isLoading) return null;\n  if (series.length === 0 && !isLoading)\n    return <span>Impossible de charger la configuration</span>;\n\n  return (\n    <Root>\n      {error && <span>{error}</span>}\n      <Header>\n        <h1>{context && context.name}</h1>\n      </Header>\n      <Content>\n        <Row>\n          <Action\n            selectItem={(item: Datas) =>\n              setData(prevDatas => ({\n                ...prevDatas,\n                children: [...prevDatas.children, item],\n              }))\n            }\n            config={{ series, context }}\n          />\n          <Navigation>\n            <ForceDirectedChart\n              retreiveSelectedNodeInformation={handleSelectedNodeInformation}\n              data={data}\n              seriesConfig={series}\n              setActionType={setActionType}\n            />\n          </Navigation>\n        </Row>\n        <Column>\n          <h2>\n            {`Liste des ${\n              actionType === 'valorisation' ? `${actionType}s` : 'enfants'\n            } de ${selectedNode && selectedNode.name}`}\n          </h2>\n          {selectedNode &&\n          (selectedNode.children || selectedNode.valorisations) ? (\n            // eslint-disable-next-line react/jsx-indent\n            <TileList\n              lists={\n                actionType === 'valorisation'\n                  ? selectedNode.valorisations\n                  : selectedNode.children\n              }\n              handleClick={handleClick}\n              selectedEntity={selectedEntity}\n            />\n          ) : (\n            <span>Aucune sélection</span>\n          )}\n        </Column>\n      </Content>\n\n      {showRightPanel && (\n        <RightPanel\n          closePanel={() => setShowRightPanel(false)}\n          title={selectedNode ? selectedNode.name : 'Détail'}\n          selectNode={handleSelectedSubItem}\n          prevSelectedNode={prevSelectedNode}\n        >\n          <FormBuilder\n            item={selectedNode}\n            selectNode={handleSelectedSubItem}\n            prevSelectedNode={prevSelectedNode}\n            setActionType={setActionType}\n          />\n        </RightPanel>\n      )}\n\n      {showBottomPanel && selectedNode && (\n        <BottomPanel\n          list={\n            actionType === 'valorisation'\n              ? selectedNode.valorisations &&\n                selectedNode.valorisations.filter(list => {\n                  return list.entity === selectedEntity;\n                })\n              : selectedNode.children &&\n                selectedNode.children.filter(list => {\n                  return list.entity === selectedEntity;\n                })\n          }\n          selectNodeInformation={handleSelectedNodeInformation}\n          closePanel={() => setShowBottomPanel(false)}\n          setActionType={setActionType}\n          entity={selectedNode.entity}\n          actionType={actionType}\n          actions={actions}\n        />\n      )}\n    </Root>\n  );\n}\n\nexport default Force;\n","import React from 'react';\nimport { Force } from '../Force';\n\nconst Document = ({ config, actions, ...rest }) => {\n  return <Force {...rest} config={config} actions={actions} />;\n};\n\nexport default Document;\n"],"sourceRoot":""}